{"version":3,"sources":["assets/img/readed.svg","assets/img/noreaded.svg","assets/img/wave.svg","assets/img/play.svg","assets/img/pause.svg","components/Button/index.js","components/Block/index.js","utils/helpers/validateField.js","modules/LoginForm/components/LoginForm.jsx","utils/validate.js","core/axios.js","utils/api/index.js","utils/helpers/openNotification.js","redux/reducers/dialogs.js","redux/reducers/currentDialog.js","redux/reducers/user.js","redux/reducers/index.js","redux/store.js","core/socket.js","redux/actions.js","modules/LoginForm/containers/LoginForm.js","components/FormField/index.js","modules/RegistrationForm/components/RegistrationForm.jsx","modules/RegistrationForm/containers/RegistrationForm.js","pages/Auth/index.js","utils/helpers/convertCurrentTime.js","components/IconReaded/index.js","utils/helpers/generateGradient.js","components/Avatar/index.js","components/Message/index.js","components/MessageInput/index.js","containers/InputMessageContainer.js","components/Dialog/index.js","containers/CurrentDialogContainer.js","components/DialogItem/index.js","components/Dialogs/index.js","containers/DialogsContainer.js","components/Sidebar/index.js","containers/SidebarContainer.js","pages/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Button","props","disabled","className","ClassNames","size","Block","children","validate","touched","errors","layout","labelCol","span","wrapperCol","LoginForm","values","handleChange","handleBlur","handleSubmit","isSubmitting","isValid","Fragment","onFinish","Item","name","help","email","onChange","onBlur","validateStatus","hasFeedback","rules","required","message","placeholder","password","Password","type","htmlType","to","isAuth","value","test","repeatPassword","Object","keys","forEach","key","instance","axios","create","baseURL","headers","window","localStorage","dialogsListAPI","get","token","myId","partnerId","post","author","partner","text","dialogsStorageAPI","dialog","id","userAPI","postData","title","notification","description","initialState","dialogs","handlers","DIALOGS_SET_ITEMS","state","payload","ADD_DIALOG","UPDATE_LAST_MESSAGE","dialogId","map","_id","lastMessage","UPDATE_LAST_MESSAGE_READED","isReaded","UPDATE_UNREADED_COUNT","unreadedCount","unreaded","SET_PARTNER_STATUS","isOnline","console","log","last_seen","Date","toISOString","DEFAULT","items","loading","currentDialog","SET_LOADING","isLoading","SET_CURRENT_DIALOG","ADD_MESSAGE","SET_CURRENT_DIALOG_ID","UPDATE_IS_READED","user","data","USER_SET_DATA","SET_TOKEN","SET_IS_AUTH","combineReducers","handle","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","rootReducer","applyMiddleware","getState","socket","io","query","transports","dialogsActions","setDialogs","addDialog","setPartnerStatus","updateUnreadedCount","setCurrentDialog","dispatch","filter","emit","dialog_id","partner_id","updateLastMessage","updateLastMessageReaded","createDialog","then","fetchDialogs","length","currentDialogActions","setMessages","addMessage","updateIsReaded","sendMessage","setLoading","fetchMessages","userActions","setUserData","setToken","setIsAuth","fetchUserData","fetchUserLogin","status","openNotification","fetchUserRegistration","connect","withRouter","history","initialValues","validateFunc","onSubmit","setSubmitting","push","catch","err","FormField","defaultValue","RegistrationForm","setTouched","onClick","Auth","exact","path","component","FormLogin","convertCurrentTime","currTime","Math","floor","IconReaded","isMe","src","readedSvg","noRreadedSvg","alt","hash","substr","split","char","number","charCodeAt","r","g","b","color","tinycolor","lighten","saturate","toHexString","lightenColor","getAvatar","avatar","Avatar","avatarSrc","firstChar","username","charAt","style","background","generateGradient","MessageAudio","audioSrc","useState","isPlaying","setPlaying","currentTime","setCurrentTime","progress","setProgress","duration","setDuration","audioElem","useRef","useEffect","current","addEventListener","ref","preload","width","pause","play","pauseSvg","playSvg","waveSvg","Message","date","audio","attachments","isTyping","classNames","fullname","item","index","url","filename","distanceInWordsToNow","addSuffix","locale","ru","defaultProps","MessageInput","inputSubmitHandler","setValue","emojiPickerVisisble","setShowEmojiPicker","set","shape","icon","SmileOutlined","fontSize","e","target","onKeyUp","containerProps","uploadProps","accept","multiple","CameraOutlined","SendOutlined","AudioOutlined","me","createdAt","Dialog","blockRef","messages","myData","useSelector","formatDistanceToNow","form","EllipsisOutlined","tip","renderWithCondition","setPartner","onMessageReadedHandler","onMessageCreatedHandler","msg","on","removeListener","scrollTo","DialogItem","created_at","onSelect","userData","setIsMe","bind","isToday","parseISO","format","DialogItems","onSelectDialog","orderBy","Dialogs","onSearch","inputValue","Search","toLowerCase","currentDialogId","filtered","setFiltered","onDialogCreated","onUserConnected","userId","onUserDisconnected","indexOf","Sidebar","modalHandleOk","showModal","modalHandleCancel","modalState","usersHandleChange","usersHandleSearch","usersSearchState","visible","confirmLoading","fetching","options","d","Option","TeamOutlined","FormOutlined","footer","showSearch","defaultActiveFirstOption","notFoundContent","showArrow","filterOption","undefined","setUsersSearchState","setModalState","response","Home","render","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.a24ba5bf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/readed.c1f419d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/noreaded.3c841bf6.svg\";","module.exports = __webpack_public_path__ + \"static/media/wave.2b8196a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.65f03140.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.a61933e8.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button as BaseButton } from 'antd'\r\nimport './Button.scss'\r\nimport ClassNames from 'classnames'\r\n\r\nconst Button = (props) => (\r\n   <BaseButton disabled={props.disabled} className={ClassNames(\"button\", props.className, {\"button--large\": props.size === \"large\"})} {...props}/>\r\n)\r\n\r\nButton.propTypes = {\r\n  className: PropTypes.string\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport './Block.scss'\r\nimport ClassNames from 'classnames'\r\n\r\nconst Block = ({ children, className }) => (<div className={ClassNames('block', className)}> {children} </div>)\r\n\r\nexport default Block","const validate = (touched, errors) => touched ? errors && touched ? 'error' : 'success' : ''\r\n\r\nexport default validate","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Form, Input } from 'antd'\r\nimport Button from '../../../components/Button'\r\nimport Block from '../../../components/Block'\r\nimport validate from '../../../utils/helpers/validateField'\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 0,\r\n  },\r\n  wrapperCol: {\r\n    span: 25,\r\n  },\r\n};\r\n\r\nconst LoginForm = ({\r\n  values,\r\n  errors,\r\n  touched,\r\n  handleChange,\r\n  handleBlur,\r\n  handleSubmit,\r\n  isSubmitting,\r\n  isValid\r\n  }) => {\r\n\r\n  const onFinish = () => {\r\n    \r\n    handleSubmit()\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className = \"auth__top\">\r\n        <h2>Войти в аккаунт</h2>\r\n        <p>Пожалуйста, войдите в свой аккаунт</p>\r\n      </div>\r\n      <Block>   \r\n        <Form {...layout} onFinish={onFinish}>\r\n          <Form.Item \r\n            name=\"email\"  \r\n            help={touched.email && errors.email}\r\n            onChange = {handleChange} \r\n            onBlur = {handleBlur}  \r\n            validateStatus={validate(touched.email, errors.email)}\r\n            hasFeedback \r\n            rules={[{required: true,message: 'Please input your E-Mail'}]}>\r\n            <Input size=\"large\" placeholder=\"E-Mail\"/>\r\n          </Form.Item>\r\n          <Form.Item \r\n            name=\"password\" \r\n            help={touched.password && errors.password}\r\n            onChange = {handleChange} \r\n            onBlur = {handleBlur} \r\n            validateStatus={validate(touched.password, errors.password)}\r\n            hasFeedback \r\n            rules={[{required: true,message: 'Please input your password'}]}>\r\n            <Input.Password size=\"large\" placeholder=\"Password\"/>\r\n          </Form.Item>\r\n          <Form.Item>\r\n          {isSubmitting && !isValid && <span>Ошибка!</span>}\r\n          <Button disabled={isSubmitting} size=\"large\" type=\"primary\" htmlType=\"submit\">Войти в аккаунт</Button>\r\n          </Form.Item>\r\n        </Form>\r\n        <Link className=\"auth__register-link\" to=\"/register\">Зарегистрироваться</Link>\r\n      </Block>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default LoginForm","const validate = ({ isAuth, values, errors }) => {\r\n  const rules = {\r\n    email: value => {\r\n      if (!value) {\r\n        errors.email = 'Введите E-Mail';\r\n      } else if (\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(value)\r\n      ) {\r\n        errors.email = 'Неверный E-Mail';\r\n      }\r\n    },\r\n    name: value =>{\r\n      if (!value) {\r\n        errors.name = 'Введите ваше имя';\r\n      }\r\n    },\r\n    password: value => {\r\n      if (!value){\r\n        errors.password = \"Введите пароль\"\r\n      } else if (!isAuth && !/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/i.test(value))\r\n        errors.password = \"Слишком легкий пароль\"\r\n    },\r\n    repeatPassword: value =>{\r\n      if (!value) {\r\n        errors.repeatPassword = 'Повторите пароль';\r\n      } else if (value !== values.password){\r\n        errors.repeatPassword = 'Пароли не совпадают';\r\n      }\r\n    },\r\n  }\r\n  Object.keys(values).forEach(key => \r\n    rules[key] && rules[key](values[key])\r\n  )\r\n}\r\n\r\nexport default validate","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://whispering-dawn-05999.herokuapp.com/',\r\n  headers: {\r\n    'token': window.localStorage['token'] || ''\r\n  }\r\n});\r\n\r\nexport default instance","import axios from '../../core/axios'\r\n\r\nexport const dialogsListAPI = {\r\n  getAllDialogs: () => axios.get('/dialogs', {\r\n    headers: {\r\n      'token': window.localStorage.token \r\n    }\r\n  }),\r\n  createDialog: (myId, partnerId) => axios.post('/dialogs', {\r\n    author: myId,\r\n    partner: partnerId,\r\n    text: \"Че кого\"\r\n  })\r\n}\r\n\r\nexport const dialogsStorageAPI = {\r\n  sendMessage: (text, dialog) => axios.post('/messages/', {\r\n    text,\r\n    dialog\r\n  }),\r\n  getAllByDialogId: id => axios.get(`/messages/${id}`)\r\n}\r\n\r\nexport const userAPI = {\r\n  login: postData => axios.post('/user/login', postData),\r\n  find: value => axios.get(`/user/find?query=${value}`, {\r\n    headers: {\r\n      'token': window.localStorage.token \r\n    }\r\n  }),\r\n  getMe: token => axios.get('/user/me', {\r\n    headers: {\r\n      'token': token \r\n    }\r\n  }),\r\n  register: postData => axios.post('/user/registration', postData),\r\n}","import { notification } from 'antd'\r\n\r\nexport default ({text, title, type = 'info'}) => notification[type]({\r\n  message: title,\r\n  description: text\r\n})","const initialState = {\r\n  dialogs: [], \r\n}\r\n\r\nconst handlers = {\r\n  DIALOGS_SET_ITEMS: (state, payload) => ({...state, dialogs: payload}),\r\n  ADD_DIALOG: (state, payload) => ({...state, dialogs: [...state.dialogs, payload]}),\r\n  UPDATE_LAST_MESSAGE: (state, {dialogId, message}) => \r\n    ({...state, \r\n      dialogs: state.dialogs.map(dialog => {\r\n        if(dialogId === dialog._id) {\r\n          dialog.lastMessage = message\r\n        }\r\n        return dialog\r\n      })\r\n    }),\r\n  UPDATE_LAST_MESSAGE_READED: (state, payload) => \r\n    ({...state, dialogs: state.dialogs.map(dialog => {\r\n        if(payload === dialog._id) {\r\n          dialog.lastMessage.isReaded = true\r\n        }\r\n        return dialog\r\n      })\r\n    }),\r\n  UPDATE_UNREADED_COUNT: (state, {dialogId, unreadedCount}) => \r\n  ({...state, dialogs: state.dialogs.map(dialog => {\r\n      if(dialogId === dialog._id) {\r\n        dialog.unreaded = unreadedCount\r\n      }\r\n      return dialog\r\n    })\r\n  }),\r\n  SET_PARTNER_STATUS: (state, {partnerId, isOnline}) => \r\n  ({...state, dialogs: state.dialogs.map(dialog => {\r\n      console.log(partnerId, dialog)\r\n      if(partnerId === dialog.author._id){\r\n        dialog.author.isOnline = isOnline\r\n        dialog.author.last_seen = new Date().toISOString()\r\n      }\r\n      if(partnerId === dialog.partner._id){\r\n        dialog.partner.isOnline = isOnline\r\n        dialog.partner.last_seen = new Date().toISOString()\r\n      }\r\n      return dialog\r\n    })\r\n  }),\r\n  DEFAULT: state => state\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  const handle = handlers[type] || handlers.DEFAULT\r\n  return handle(state, payload)\r\n}","const initialState = {\r\n  items: null,\r\n  loading: false,\r\n  currentDialog: null\r\n}\r\n\r\nconst handlers = {\r\n  SET_LOADING: (state, isLoading) => ({...state, loading: isLoading }),\r\n  SET_CURRENT_DIALOG: (state, payload) => ({...state, loading: false, items: payload}),\r\n  ADD_MESSAGE: (state, payload) => ({...state, items: [...state.items, payload]}),\r\n  SET_CURRENT_DIALOG_ID: (state, payload) => ({...state, currentDialog: payload}),\r\n  UPDATE_IS_READED: (state, {dialogId, myId}) => ({...state, items: state.items.map(message => {\r\n    if(message.dialog._id === dialogId && message.user._id === myId) {\r\n      message.isReaded = true\r\n    }\r\n    return message\r\n  })}),\r\n  DEFAULT: state => state\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  const handle = handlers[type] || handlers.DEFAULT\r\n  return handle(state, payload)\r\n}","const initialState = {\r\n  data: null,\r\n  token: window.localStorage.token,\r\n  isAuth: !!window.localStorage.token\r\n}\r\n\r\nconst handlers = {\r\n  USER_SET_DATA: (state, payload) => ({...state, data: payload}),\r\n  SET_TOKEN: (state, payload) => ({...state, token: payload}),\r\n  SET_IS_AUTH: (state, payload) => ({...state, isAuth: payload}),\r\n  DEFAULT: state => state\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  const handle = handlers[type] || handlers.DEFAULT\r\n  return handle(state, payload)\r\n}","import { combineReducers } from 'redux'\r\nimport dialogs from './dialogs'\r\nimport currentDialog from './currentDialog'\r\nimport user from './user'\r\n\r\nexport default combineReducers({ dialogs, currentDialog, user })","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport rootReducer from './reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middleware)))\r\n\r\nexport default store","import io from 'socket.io-client'\r\nimport store from '../redux/store'\r\n\r\nconst {user} = store.getState()\r\n\r\nconst socket = io('https://whispering-dawn-05999.herokuapp.com/', {\r\n  query: {\r\n    token: user.token || ''\r\n  },\r\n  transports: ['websocket']\r\n})\r\n\r\nexport default socket","import { dialogsListAPI, dialogsStorageAPI, userAPI } from '../utils/api'\r\nimport openNotification from '../utils/helpers/openNotification'\r\nimport socket from '../core/socket'\r\nexport const dialogsActions = {\r\n  setDialogs: items => ({\r\n    type: 'DIALOGS_SET_ITEMS',\r\n    payload: items\r\n  }),\r\n  addDialog: dialog => ({\r\n    type: 'ADD_DIALOG',\r\n    payload: dialog\r\n  }),\r\n  setPartnerStatus: (partnerId, isOnline) => ({\r\n    type: 'SET_PARTNER_STATUS',\r\n    payload: {\r\n      partnerId, \r\n      isOnline\r\n    }\r\n  }),\r\n  updateUnreadedCount: (dialogId, unreadedCount) => ({\r\n    type: 'UPDATE_UNREADED_COUNT',\r\n    payload: {\r\n      dialogId, \r\n      unreadedCount\r\n    }\r\n  }),\r\n  setCurrentDialog: id => (dispatch, getState) => {\r\n    const {user: {data}, dialogs: {dialogs}} = getState()\r\n    const currentDialog = dialogs.filter(dialog => dialog._id === id)[0]\r\n    const partnerId = data._id === currentDialog.author._id ? currentDialog.partner._id : currentDialog.author._id\r\n    socket.emit('DIALOG_ENTERED', {dialog_id: id, partner_id: partnerId})\r\n    dispatch(dialogsActions.updateUnreadedCount(currentDialog._id, 0))\r\n    dispatch({\r\n      type: 'SET_CURRENT_DIALOG_ID',\r\n      payload: id\r\n    })\r\n  },\r\n  updateLastMessage: (dialogId, message) => ({\r\n    type: 'UPDATE_LAST_MESSAGE',\r\n    payload: {\r\n      dialogId, \r\n      message\r\n    }\r\n  }),\r\n  updateLastMessageReaded: dialogId => ({\r\n    type: 'UPDATE_LAST_MESSAGE_READED',\r\n    payload: dialogId\r\n  }),\r\n  createDialog: partnerId => (dispatch, getState) => {\r\n    const {user: {data}} = getState()\r\n    return dialogsListAPI.createDialog(data._id, partnerId).then(({data}) => {\r\n      dispatch(dialogsActions.addDialog(data))\r\n    })\r\n  },\r\n  fetchDialogs: () => dispatch => {\r\n    return dialogsListAPI.getAllDialogs().then(({data}) => {\r\n      if(data.length)\r\n        dispatch(dialogsActions.setDialogs(data))\r\n    })\r\n  }\r\n}\r\n \r\nexport const currentDialogActions = {\r\n  setMessages: items => ({\r\n    type: 'SET_CURRENT_DIALOG',\r\n    payload: items\r\n  }),\r\n  addMessage: message => ({\r\n    type: 'ADD_MESSAGE',\r\n    payload: message\r\n  }),\r\n  updateIsReaded: (dialogId, partnerId) => (dispatch, getState) => {\r\n    const {user: {data}} = getState()\r\n    dispatch({\r\n      type: 'UPDATE_IS_READED',\r\n      payload: {dialogId, myId: data._id}\r\n    })\r\n  },\r\n  sendMessage: text => (dispatch, getState) => {\r\n    const {currentDialog: {currentDialog}} = getState()\r\n    dialogsStorageAPI.sendMessage(text, currentDialog)\r\n  },\r\n  setLoading: (isLoading) => ({\r\n    type: 'SET_LOADING',\r\n    payload: isLoading\r\n  }),\r\n  fetchMessages: dialogId => dispatch => {\r\n    dispatch(currentDialogActions.setLoading(true))\r\n    dialogsStorageAPI.getAllByDialogId(dialogId).then(({data}) => {\r\n      dispatch(currentDialogActions.setMessages(data || null))\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const userActions = {\r\n  setUserData: data => ({\r\n    type: 'USER_SET_DATA',\r\n    payload: data\r\n  }),\r\n  setToken: token => ({\r\n    type: 'SET_TOKEN',\r\n    payload: token\r\n  }),\r\n  setIsAuth: isAuth => ({\r\n    type: 'SET_IS_AUTH',\r\n    payload: isAuth\r\n  }),\r\n  fetchUserData: token => dispatch => {\r\n    userAPI.getMe(token).then(({ data }) => {\r\n      dispatch(userActions.setUserData(data))\r\n    })\r\n  },\r\n  fetchUserLogin:  postData =>  dispatch => {\r\n    return userAPI.login(postData).then(({ data }) => {\r\n        const {status, token} = data\r\n        console.log(token)\r\n        if(status === 'error'){\r\n          openNotification({text: 'Неверный логин или пароль', title: 'Ошибка при авторизации', type: 'error'})\r\n        }\r\n        else{\r\n          openNotification({title: 'Отлично!', text: 'Авторизация успешна', type: 'success'})\r\n          window.localStorage.token = token\r\n          dispatch(userActions.setToken(token))\r\n          dispatch(userActions.setIsAuth(true))\r\n          dispatch(userActions.fetchUserData(token))\r\n        }\r\n        return status\r\n      })\r\n  },\r\n  fetchUserRegistration: postData =>  dispatch => {\r\n    return userAPI.register(postData).then(({ data }) => {\r\n        const {status, token} = data\r\n        if(status === 'error'){\r\n          openNotification({text: 'Ошибка при регистрации', title: 'Упс', type: 'error'})\r\n        }\r\n        else{\r\n          openNotification({title: 'Отлично!', text: 'Регистрация прошла успешно', type: 'success'})\r\n          window.localStorage.token = token\r\n          dispatch(userActions.setToken(token))\r\n          dispatch(userActions.setIsAuth(true))\r\n          dispatch(userActions.fetchUserData(token))\r\n        }\r\n        return status\r\n      })\r\n  }\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport LoginForm from '../components/LoginForm.jsx'\r\nimport { Formik } from 'formik';\r\nimport validateFunc from '../../../utils/validate'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { userActions } from '../../../redux/actions'\r\n\r\nconst FormikLogin = ({fetchUserLogin, history}) => (\r\n  <div>\r\n    <Formik\r\n      initialValues={{ email: '', password: '' }}\r\n      validate = {values => {\r\n        const errors = {}\r\n        validateFunc({ isAuth: true, values, errors  })\r\n        return errors\r\n      }}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setSubmitting(true)\r\n        fetchUserLogin(values).then(status => {\r\n          \r\n          if(status === 'success'){\r\n            history.push('/')\r\n          }\r\n          else{\r\n            setSubmitting(false)\r\n          }\r\n          \r\n        }).catch(err => {\r\n          setSubmitting(false)\r\n        })\r\n      }}\r\n    >\r\n      {LoginForm}\r\n    </Formik>\r\n  </div>\r\n);\r\n\r\nexport default connect(state => state, userActions)(withRouter(FormikLogin))","import React from 'react';\r\nimport { Form, Input } from 'antd'\r\nimport validate from '../../utils/helpers/validateField'\r\n\r\nconst FormField = ({\r\n  name,\r\n  placeholder,\r\n  type,\r\n  handleChange,\r\n  handleBlur,\r\n  touched,\r\n  errors,\r\n  defaultValue\r\n}) => {\r\n  return (\r\n    <Form.Item \r\n      help={touched[name] && errors[name]} \r\n      name={name}\r\n      onChange={handleChange} \r\n      onBlur={handleBlur}\r\n      validateStatus={validate(touched[name], errors[name])} \r\n      hasFeedback \r\n      defaultValue = {defaultValue}\r\n      >\r\n        {type === \"password\" ? <Input.Password size=\"large\" placeholder={placeholder}/> : <Input size=\"large\" placeholder={placeholder}/>}\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport default FormField;","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Form } from 'antd'\r\nimport Button from '../../../components/Button'\r\nimport FormField from '../../../components/FormField'\r\nimport Block from '../../../components/Block'\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 0,\r\n  },\r\n  wrapperCol: {\r\n    span: 25,\r\n  }\r\n};\r\n\r\nconst RegistrationForm = ({\r\n  values,\r\n  errors,\r\n  touched,\r\n  handleChange,\r\n  handleBlur,\r\n  handleSubmit,\r\n  setTouched\r\n}) => {\r\n  const onFinish = () => {\r\n    handleSubmit()\r\n  }\r\n  return (\r\n    \r\n    <React.Fragment>\r\n    <div className = \"auth__top\">\r\n      <h2>Зарегистрируйтесь</h2>\r\n      <p>Для входа в чат, нужно зарегистрироваться</p>\r\n    </div>\r\n    <Block>   \r\n      <Form {...layout} onFinish={onFinish}>\r\n        <FormField name=\"email\" placeholder=\"E-mail\" touched={touched} errors={errors} handleChange={handleChange} handleBlur={handleBlur} defaultValue={values.email}/>\r\n        <FormField name=\"name\" placeholder=\"Ваше имя\" touched={touched} errors={errors} handleChange={handleChange} handleBlur={handleBlur} defaultValue={values.name}/>\r\n        <FormField type=\"password\" name=\"password\" placeholder=\"Пароль\" touched={touched} errors={errors} handleChange={handleChange} handleBlur={handleBlur} defaultValue={values.password}/>\r\n        <FormField type=\"password\" name=\"repeatPassword\" placeholder=\"Повторите пароль\" touched={touched} errors={errors} handleChange={handleChange} handleBlur={handleBlur} defaultValue={values.repeatPassword}/>\r\n        <Form.Item>\r\n        <Button onClick = {() => {\r\n          setTouched({email: true, name: true, password: true, repeatPassword: true})\r\n        }} size=\"large\" type=\"primary\" htmlType=\"submit\">Зарегистрироваться</Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <Link className=\"auth__register-link\" to=\"/login\">Войти в аккаунт</Link>\r\n    </Block>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default RegistrationForm","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport RegistrationForm from '../components/RegistrationForm.jsx'\r\nimport { Formik } from 'formik';\r\nimport validateFunc from '../../../utils/validate'\r\nimport { userActions } from '../../../redux/actions'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst FormikRegistration = ({fetchUserRegistration, history}) => (\r\n  <div>\r\n    <Formik\r\n      initialValues={{ email: '', name:'', password: '', repeatPassword: '' }}\r\n      \r\n      validate = {values => {\r\n        const errors = {}\r\n        validateFunc({ isAuth: false, values, errors })\r\n        return errors\r\n      }}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        fetchUserRegistration(values).then(status => {\r\n          \r\n          if(status === 'success'){\r\n            history.push('/')\r\n          }\r\n          else{\r\n            setSubmitting(false)\r\n          }\r\n          \r\n        }).catch(err => {\r\n          setSubmitting(false)\r\n        })\r\n      }}\r\n    >\r\n      {RegistrationForm}\r\n    </Formik>\r\n  </div>\r\n);\r\n\r\nexport default connect(state => state, userActions)(withRouter(FormikRegistration))","import React from 'react'\r\nimport './Auth.scss'\r\nimport { FormLogin, RegistrationForm } from '../../modules'\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\n\r\nconst Auth = () => {\r\n\r\n  return (\r\n    <div className = \"auth\">\r\n      <div className = \"auth__wrapper\">\r\n        <Switch>\r\n          <Route exact path={['/', '/login']} component={FormLogin}/>\r\n          <Route exact path='/register' component={RegistrationForm}/>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Auth","const convertCurrentTime = currTime => {\r\n  if(!currTime) return '00:00'\r\n  return `${Math.floor(currTime / 60) >= 10 ? Math.floor(currTime / 60) : '0'+Math.floor(currTime / 60)}:${Math.floor(currTime % 60) >= 10 ? Math.floor(currTime % 60) : '0'+Math.floor(currTime % 60)}`\r\n}\r\n\r\nexport default convertCurrentTime","import React from 'react'\r\nimport readedSvg from '../../assets/img/readed.svg'\r\nimport noRreadedSvg from '../../assets/img/noreaded.svg'\r\nconst IconReaded = ({ isMe, isReaded, className }) =>(\r\n  <div className = {className}>\r\n    <img src={isReaded ? readedSvg : noRreadedSvg} alt=\"\"/>\r\n  </div>\r\n)\r\n\r\nexport default IconReaded","import tinycolor from 'tinycolor2'\r\n\r\nconst getCorrectIndex = number => {\r\n  if(number > 255) return number % 255\r\n  if(number < 0) return -number % 255\r\n  return number\r\n}\r\n\r\nexport default hash => {\r\n  const [r, g, b] = hash.substr(-3, 3).split('').map(char => getCorrectIndex(char.charCodeAt()))\r\n  return {\r\n    color: tinycolor({r, g , b}).lighten(10).saturate(20).toHexString(), \r\n    lightenColor: tinycolor({r, g , b}).saturate(20).lighten(30).toHexString()\r\n  }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport generateGradient from '../../utils/helpers/generateGradient'\r\nimport './Avatar.scss'\r\n\r\nconst getAvatar = avatar => {\r\n  if(avatar){\r\n    return avatar\r\n  }\r\n  else{\r\n\r\n  }\r\n}\r\n\r\nconst Avatar = ({avatarSrc, hash, username}) => {\r\n  const firstChar = username.charAt(0)\r\n  return (\r\n  <div className = \"avatar\">\r\n    {avatarSrc  \r\n      ? <img src={getAvatar(avatarSrc)} alt={`User avatar`}/>\r\n      : <div className=\"avatar__gradient\" style={{background: `linear-gradient(115deg, ${generateGradient(hash).color}, ${generateGradient(hash).lightenColor})`}}>\r\n          <span>{firstChar}</span>\r\n        </div>\r\n    }\r\n  </div>\r\n)}\r\n\r\nAvatar.propTypes = {\r\n  avatarSrc: PropTypes.string,\r\n  hash: PropTypes.string\r\n}\r\n\r\nexport default Avatar","import React, {useState, useRef, useEffect} from 'react'\r\nimport distanceInWordsToNow from 'date-fns/formatDistanceToNow'\r\nimport classNames from 'classnames'\r\nimport { ru } from 'date-fns/locale'\r\nimport PropTypes from 'prop-types'\r\nimport convertCurrentTime from '../../utils/helpers/convertCurrentTime'\r\nimport './Message.scss'\r\nimport IconReaded from '../IconReaded'\r\nimport Avatar from '../Avatar'\r\nimport waveSvg from '../../assets/img/wave.svg'\r\nimport playSvg from '../../assets/img/play.svg'\r\nimport pauseSvg from '../../assets/img/pause.svg'\r\n\r\nconst MessageAudio = ({audioSrc}) => {\r\n  const [isPlaying, setPlaying] = useState(false)\r\n  const [currentTime, setCurrentTime] = useState(0)\r\n  const [progress, setProgress] = useState(0)\r\n  const [duration, setDuration] = useState(0)\r\n  const audioElem = useRef(null)\r\n  useEffect(()=>{\r\n    if(audioElem.current){\r\n      audioElem.current.addEventListener('canplay', () => {\r\n        setDuration(audioElem.current.duration)\r\n      }, false)\r\n      audioElem.current.addEventListener('playing', () => {\r\n        setPlaying(true)\r\n      }, false)\r\n      audioElem.current.addEventListener('ended', () => {\r\n        setPlaying(false)\r\n        setProgress(0)\r\n        setCurrentTime(0)\r\n      }, false)\r\n      audioElem.current.addEventListener('pause', () => {\r\n        setPlaying(false)\r\n      }, false)\r\n      audioElem.current.addEventListener('timeupdate', () => {\r\n        setCurrentTime(audioElem.current.currentTime)\r\n      })\r\n    }\r\n  }, [])\r\n  useEffect(()=>{\r\n    if(audioElem.current){\r\n      setProgress((currentTime / duration) * 100)\r\n    }\r\n  }, [currentTime, duration])\r\n  const togglePlay = () => {\r\n    if(!isPlaying)\r\n      audioElem.current.play();\r\n    else\r\n      audioElem.current.pause();\r\n  }\r\n  return (\r\n     <div className=\"message__audio\">\r\n      <audio ref={audioElem} src={audioSrc} preload=\"metadata\"></audio>\r\n\r\n      <div className=\"message__audio-progress\" style={{width: progress + '%'}}></div>\r\n      <div className=\"message__audio-control\">\r\n        <div className=\"message__audio-btn\">\r\n          <button onClick={togglePlay}>\r\n            <img src={isPlaying ? pauseSvg : playSvg} alt=\"play-button\"/>\r\n          </button>\r\n        </div>\r\n        <div className=\"message__audio-wave\"><img src={waveSvg} alt=\"wave\"/></div>\r\n          <span className=\"message__audio-duration\">{convertCurrentTime(duration - currentTime)}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Message = ({avatar, text, date, user, isMe, isReaded, audio, attachments, isTyping}) => {\r\n  return (\r\n   <div className = {classNames('message', \r\n    {\r\n      'message--isme': isMe, \r\n      'message--is-typing': isTyping, \r\n      'message--image': attachments && attachments.length === 1,\r\n      'message--audio': audio\r\n    })}>\r\n     <div className = \"message__wrap\">\r\n      <div className=\"message__avatar\">\r\n        <Avatar avatarSrc={avatar} hash={user._id} username={user.fullname}/>\r\n      </div>\r\n      <div>\r\n        <div className=\"message__content\">\r\n          {(audio || text || isTyping) && <div className=\"message__bubble\">\r\n            <div className = \"message__typing\">\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n            </div>\r\n            { text && <p className=\"message__text\">{text}</p>}\r\n            {audio && <MessageAudio audioSrc={audio}/>}\r\n          </div>}\r\n          {attachments.length \r\n            ? <div className = \"message__attachments\">\r\n                {attachments.map((item, index) => (\r\n                  <div key = {index} className = \"message__attachments-item\">\r\n                    <img src={item.url} alt={item.filename}/>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            : ''\r\n          }\r\n        </div>\r\n        <span className=\"message__date\">{distanceInWordsToNow(new Date(date), { addSuffix: true, locale: ru })}</span>\r\n      </div>\r\n        {isMe ? <IconReaded className=\"message__readed-icon\" isReaded={isReaded}/> : ''}\r\n     </div>\r\n     \r\n   </div>\r\n)}\r\n\r\nMessage.defaultProps = {\r\n  user: {},\r\n  attachments: []\r\n}\r\n\r\nMessage.propTypes = {\r\n  avatar: PropTypes.string,\r\n  text: PropTypes.string,\r\n  date: PropTypes.string,\r\n  user: PropTypes.object,\r\n  attachments: PropTypes.array,\r\n  isTyping: PropTypes.bool\r\n}\r\n\r\nexport default Message","import React, {useState} from 'react'\r\nimport './MessageInput.scss'\r\nimport { SmileOutlined, AudioOutlined, CameraOutlined, SendOutlined} from '@ant-design/icons'\r\nimport { Button, Input } from 'antd'\r\nimport { UploadField } from '@navjobs/upload'\r\nimport { Picker } from 'emoji-mart'\r\n\r\nfunction MessageInput({ inputSubmitHandler }) {\r\n\r\n  const [value, setValue] = useState()\r\n  const [emojiPickerVisisble, setShowEmojiPicker] = useState(false)\r\n  const toggleEmojiPicker = () => {\r\n    setShowEmojiPicker(!emojiPickerVisisble)\r\n  }\r\n  return (\r\n    <div className = \"message-input\">\r\n      <div className=\"message-input__smile-btn\">\r\n        {emojiPickerVisisble && <div className = \"message-input__emoji-picker\">\r\n          <Picker set='google'/>\r\n        </div>}\r\n        <Button onClick={toggleEmojiPicker} className=\"ant-btn--no-border\" shape=\"circle\" icon={<SmileOutlined style = {{fontSize: '20px'}}/>} />\r\n      </div>\r\n      <div className=\"message-input__textarea\">\r\n        <Input \r\n          onChange={e => { setValue(e.target.value)} } \r\n          onKeyUp = {(e) => {inputSubmitHandler(e, setValue)}}\r\n          placeholder=\"Введите текст сообщения...\" \r\n          size = \"large\"\r\n          value = {value}/>\r\n      </div>\r\n      <div className=\"message-input__actions\">\r\n      <UploadField\r\n        containerProps={{\r\n          className: 'photos'\r\n        }}\r\n        uploadProps={{\r\n          accept: '.jpg,.jpeg,.png,.gif,.bmp',\r\n          multiple: \"multiple\"\r\n        }}\r\n        \r\n      >\r\n        <Button className=\"ant-btn--no-border\" shape=\"circle\" icon={<CameraOutlined  style = {{fontSize: '20px'}}/>} />\r\n      </UploadField>\r\n        {value\r\n          ? <Button className=\"ant-btn--no-border\" shape=\"circle\" icon={<SendOutlined  style = {{fontSize: '20px'}}/>} />\r\n          : <Button className=\"ant-btn--no-border\" shape=\"circle\" icon={<AudioOutlined  style = {{fontSize: '20px'}}/>} />\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageInput;","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport InputMessage from '../components/MessageInput'\r\nimport { currentDialogActions } from '../redux/actions'\r\n\r\n\r\n\r\nconst InputMessageContainer = ({me, dialogId, sendMessage, addMessage }) => {\r\n  \r\n  const inputSubmitHandler = (e, setValue) => {\r\n    if(e.key === \"Enter\" && e.target.value){\r\n      addMessage({text: e.target.value, isReaded: false, user: me, createdAt: new Date().toISOString(), dialog: {_id: dialogId}})\r\n      sendMessage(e.target.value)\r\n      setValue('')\r\n    }\r\n  }\r\n    \r\n  return (\r\n    <InputMessage inputSubmitHandler = {inputSubmitHandler}/>\r\n  );\r\n};\r\n\r\nexport default connect(({user, currentDialog}) =>  ({me: user.data, dialogId: currentDialog.currentDialog}),  currentDialogActions)(InputMessageContainer);","import React from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport  Message  from '../Message'\r\nimport  MessageInputContainer  from '../../containers/InputMessageContainer'\r\nimport { EllipsisOutlined } from '@ant-design/icons'\r\nimport { Button, Empty } from 'antd'\r\nimport './Dialog.scss'\r\nimport { Spin } from 'antd';\r\nimport classNames from 'classnames'\r\nimport { formatDistanceToNow } from 'date-fns'\r\nimport { ru } from 'date-fns/locale'\r\n\r\nconst renderWithCondition = (isLoading, messages, myData) => {\r\n  if(isLoading || !myData){\r\n    return <Spin tip=\"Загрузка сообщений...\" size=\"large\"/>\r\n  }\r\n  else if (!messages){\r\n    return <Empty description=\"Откройте диалог\"/> \r\n  }\r\n  else if(messages.length === 0){\r\n    return <Empty description=\"Диалог пуст\"/> \r\n  }\r\n  return messages.map( (message, index) => \r\n    (\r\n      <Message\r\n        key={index}\r\n        avatar = {message.user.avatar} \r\n        text={message.text} \r\n        date={message.createdAt} \r\n        attachments = {message.attachments}\r\n        user={message.user}\r\n        isMe = {message.user._id === myData._id}\r\n        isReaded = {message.isReaded}\r\n      />\r\n    )\r\n  )\r\n}\r\n\r\nconst Dialog = ({blockRef, isLoading, messages, partner }) => {\r\n  const myData = useSelector(({user: {data}}) => data)\r\n  return (\r\n    <div className = \"dialog\">\r\n      <div className=\"dialog__header\">\r\n        <div></div>\r\n        <div className=\"dialog__header-center\">\r\n          <b className=\"dialog__header-username\">{partner.fullname}</b>\r\n          <div className=\"dialog__header-status\">\r\n            {partner.last_seen && <div className = {classNames(\"status\", {\"status--online\": partner.isOnline})}>{ partner.isOnline ? 'онлайн' : `был в сети ${formatDistanceToNow(new Date(partner.last_seen), { addSuffix: true, locale: ru })}`}</div>}\r\n          </div>\r\n        </div>\r\n        <Button className=\"ant-btn--no-border\" form=\"circle\" icon={<EllipsisOutlined style={{ fontSize: '20px'}}/>}/>\r\n      </div>\r\n      <div ref={blockRef} className = \"dialog__messages\">\r\n        {renderWithCondition(isLoading, messages, myData)}\r\n      </div>\r\n      <div className=\"dialog__input\">\r\n        <MessageInputContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDialog.propTypes = {\r\n  \r\n};\r\n\r\nexport default Dialog;","import React, {useState, useEffect, useRef} from 'react';\r\nimport { connect } from 'react-redux'\r\nimport socket from '../core/socket'\r\nimport Dialog from '../components/Dialog'\r\nimport { currentDialogActions, dialogsActions } from '../redux/actions'\r\n\r\n\r\n\r\nconst CurrentDialogContainer = ({me, isLoading, dialogId, dialogs, messages, fetchMessages, addMessage, updateIsReaded}) => {\r\n  const [partner, setPartner] = useState({})\r\n\r\n  useEffect(() => {\r\n    if(dialogs && dialogId){\r\n      const {author, partner} = dialogs.filter(dialog => dialog._id === dialogId)[0]\r\n      setPartner(author._id === me._id ? partner : author)\r\n    }\r\n  }, [dialogs, dialogId])\r\n  \r\n  const onMessageReadedHandler = ({dialog_id, partner_id}) => {\r\n    if(me && dialogId === dialog_id && partner_id === me._id){\r\n      updateIsReaded(dialog_id)\r\n    }\r\n  }\r\n\r\n  const onMessageCreatedHandler = msg => {\r\n    \r\n    if(dialogId && me && dialogId === msg.dialog._id){\r\n      if( me && msg.user._id !== me._id) {\r\n        addMessage(msg)\r\n        let {author, partner} = dialogs.filter(dialog => dialog._id === dialogId)[0]\r\n        partner = author._id === me._id ? partner : author\r\n        socket.emit('DIALOG_ENTERED', {dialog_id: dialogId, partner_id: partner._id}, data => {\r\n          console.log(data)\r\n        })\r\n      }   \r\n    }\r\n  }\r\n\r\n  const ref = useRef(null)\r\n  useEffect(() => {\r\n    if(dialogId)\r\n      fetchMessages(dialogId)\r\n    socket.on('SERVER:MESSAGE_CREATED', onMessageCreatedHandler)\r\n    socket.on('SERVER:MESSAGES_READED', onMessageReadedHandler)\r\n    return () => {\r\n      socket.removeListener('SERVER:MESSAGE_CREATED', onMessageCreatedHandler)\r\n      socket.removeListener('SERVER:MESSAGE_READED', onMessageReadedHandler)\r\n    }\r\n  }, [dialogId, partner])\r\n  useEffect(() => {\r\n    if(ref.current)\r\n      ref.current.scrollTo(0, 9999)\r\n  }, [messages])\r\n  \r\n  return (\r\n    <Dialog partner={partner} blockRef = {ref} isLoading = {isLoading} messages={messages}/>\r\n  );\r\n};\r\n\r\nexport default connect(({ currentDialog, dialogs, user }) =>  {\r\n  return { me: user.data, dialogId: currentDialog.currentDialog, dialogs: dialogs.dialogs, messages: currentDialog.items, isLoading: currentDialog.loading}\r\n},  {...currentDialogActions, ...dialogsActions})(CurrentDialogContainer);","import React, {useState, useEffect} from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport { format, isToday, parseISO } from 'date-fns'\r\nimport IconReaded from '../IconReaded'\r\nimport \"./DialogItem.scss\"\r\nimport Avatar from '../Avatar'\r\n\r\nconst getMessageTime = created_at => {\r\n\r\n\r\n\r\n  if(isToday(parseISO(created_at))){\r\n    return format(new Date(created_at), 'hh:mm')\r\n  }\r\n  return format(new Date(created_at), 'd.MM.yy')\r\n}\r\n\r\n const DialogItem = ({ id, partner, unreaded, lastMessage, user = lastMessage.user, onSelect }) => {\r\n  const userData = useSelector(({user: {data}}) => data)\r\n  const [isMe, setIsMe] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(userData && user){\r\n      setIsMe(userData._id === user._id)\r\n    }\r\n  }, [userData, user])\r\n\r\n  return(\r\n  <div onClick = {onSelect.bind(this, id)} className = {classNames(\"dialogs__item\", {\"dialogs__item--online\": partner.isOnline})}>\r\n    <div className='dialogs__item-avatar'>\r\n      <Avatar avatarSrc={partner.avatar} hash={partner._id} username={partner.fullname}/>\r\n    </div>\r\n    <div className=\"dialogs__item-info\">\r\n      <div className=\"dialogs__item-info-top\">\r\n        <b className=\"dialogs__username\">{partner.fullname}</b>\r\n        <span className=\"dialogs__date\">\r\n          {getMessageTime(lastMessage.createdAt)}\r\n        </span>\r\n      </div>\r\n      <div className=\"dialogs__item-info-bottom\">\r\n        <p className=\"dialogs__text\">\r\n          {`${isMe ? 'You' : partner.fullname}: ${lastMessage.text}`}\r\n        </p>\r\n      </div>\r\n      {isMe ? <IconReaded className=\"dialogs__readed-icon\" isReaded = {lastMessage.isReaded} /> : ''}\r\n      {(!isMe && unreaded) ? <div className=\"dialogs__count\">{unreaded}</div> : ''}\r\n    </div>\r\n  </div>\r\n)}\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport  DialogItem  from '../DialogItem'\r\nimport orderBy from 'lodash/orderBy'\r\nimport { Input, Empty, Spin } from 'antd'\r\nimport './Dialogs.scss'\r\n\r\n\r\nconst DialogItems = ({dialogs, me, onSelectDialog}) => {\r\n  if(me){\r\n    return dialogs.length\r\n      ? orderBy(\r\n        dialogs,\r\n        ({lastMessage}) => lastMessage.createdAt,\r\n        [\"desc\"]\r\n      ).map(dialog => {\r\n        const partner = me._id === dialog.partner._id ? dialog.author : dialog.partner\r\n        return(\r\n          <DialogItem onSelect={onSelectDialog} partner={partner}  key={dialog._id} id={dialog._id} lastMessage={dialog.lastMessage} unreaded = {dialog.unreaded}/>\r\n      )})\r\n      : <Empty description=\"Диалоги не найдены\" />\r\n  }\r\n  return <Spin size=\"large\"/>\r\n}\r\n\r\nconst Dialogs = ({ me, dialogs, onSearch, inputValue, onSelectDialog }) =>{\r\n  \r\n  return (\r\n  <div className=\"dialogs\">\r\n    <div className=\"dialogs__search\">\r\n      <Input.Search onChange={e => onSearch(e.target.value.toLowerCase())} placeholder=\"Поиск среди контактов\" size=\"large\" value={inputValue}/>\r\n    </div>\r\n    <DialogItems dialogs={dialogs} me={me} onSelectDialog = {onSelectDialog}/>\r\n    \r\n  </div>\r\n)}\r\n\r\nexport default Dialogs","import React, {useState, useEffect} from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { dialogsActions } from '../redux/actions'\r\nimport Dialogs from '../components/Dialogs'\r\nimport socket from '../core/socket'\r\n\r\nconst DialogsContainer = ({ \r\n    me, \r\n    dialogs, \r\n    currentDialogId, \r\n    updateLastMessage,  \r\n    updateLastMessageReaded, \r\n    setCurrentDialog, \r\n    fetchDialogs, \r\n    addDialog, \r\n    updateUnreadedCount, \r\n    setPartnerStatus\r\n  }) => {\r\n  const [inputValue, setValue] = useState()\r\n  const [filtered, setFiltered] = useState(dialogs)\r\n  useEffect(() => {\r\n    if(!dialogs.length)\r\n      fetchDialogs()\r\n    else setFiltered(dialogs)\r\n  }, [dialogs])\r\n  const onMessageCreatedHandler = msg => {\r\n    if(currentDialogId !== msg.dialog._id){\r\n      for(let dialog of dialogs ){\r\n        console.log(dialog)\r\n        if(dialog._id === msg.dialog._id){\r\n          updateUnreadedCount(msg.dialog._id, msg.dialog.unreaded++)\r\n        }\r\n      }\r\n    }\r\n    if(me && msg.dialog.author === me._id || msg.dialog.partner === me._id)\r\n      updateLastMessage(msg.dialog._id, msg) \r\n  }\r\n  const onMessageReadedHandler = ({dialog_id, partner_id}) => {\r\n    if(me && partner_id === me._id)\r\n      updateLastMessageReaded(dialog_id)\r\n  }\r\n  const onDialogCreated = dialog => {\r\n    console.log(dialog)\r\n    if(me && me._id === dialog.partner._id){\r\n      addDialog(dialog)\r\n    }\r\n  }\r\n\r\n  const onUserConnected = userId => {\r\n    setPartnerStatus(userId, true)\r\n  }\r\n  const onUserDisconnected = userId => {\r\n    setPartnerStatus(userId, false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    socket.on('USER_CONNECTED', onUserConnected)\r\n    socket.on('USER_DISCONNECTED', onUserDisconnected)\r\n    socket.on('SERVER:DIALOG_CREATED', onDialogCreated)\r\n    socket.on('SERVER:MESSAGE_CREATED', onMessageCreatedHandler)\r\n    socket.on('SERVER:MESSAGES_READED', onMessageReadedHandler)\r\n    return () => {\r\n      socket.removeListener('USER_CONNECTED', onUserConnected)\r\n      socket.removeListener('USER_DISCONNECTED', onUserDisconnected)\r\n      socket.removeListener('SERVER:MESSAGE_CREATED', onMessageCreatedHandler)\r\n      socket.removeListener('SERVER:MESSAGE_READED', onMessageReadedHandler)\r\n      socket.removeListener('SERVER:DIALOG_CREATED', onDialogCreated)\r\n    }\r\n  }, [me, dialogs, currentDialogId])\r\n  const onChangeInput = value => {\r\n    setFiltered(dialogs.filter(dialog => {\r\n      const partner = me._id === dialog.partner._id ? 'author' : 'partner'\r\n      return dialog[partner].fullname.toLowerCase().indexOf(value) >= 0 \r\n    }))\r\n    setValue(value)\r\n  }\r\n  return (\r\n    <Dialogs me={me} dialogs={filtered} onSearch={onChangeInput} inputValue={inputValue} onSelectDialog={setCurrentDialog}/>\r\n  );\r\n};\r\n\r\nexport default connect(({user, dialogs: {dialogs}, currentDialog: {currentDialog} }) => ({dialogs: dialogs, currentDialogId: currentDialog, me: user.data}), dialogsActions)(DialogsContainer);","import React from 'react';\r\nimport './Sidebar.scss'\r\nimport { TeamOutlined, FormOutlined } from '@ant-design/icons'\r\nimport { Modal,  Button, Select, Spin } from 'antd'\r\nimport  DialogsContainer  from '../../containers/DialogsContainer'\r\n\r\nconst Sidebar = ({modalHandleOk, showModal, modalHandleCancel, modalState, usersHandleChange, usersHandleSearch, usersSearchState}) => {\r\n  const {visible, confirmLoading} = modalState\r\n  const {value, fetching, data} = usersSearchState\r\n  const options = data.map(d => <Select.Option key={d._id}>{d.fullname}</Select.Option>);\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar__header\">\r\n        <div>\r\n          <TeamOutlined  style={{ fontSize: '18px'}}/>\r\n          <span>Список диалогов</span>\r\n        </div>\r\n        <Button onClick={showModal} className=\"ant-btn--no-border\" form=\"circle\" icon={<FormOutlined style={{ fontSize: '18px'}}/>}/>\r\n        <Modal\r\n          title=\"Создание диалога\"\r\n          visible={visible}\r\n          footer={[\r\n            <Button key=\"back\" onClick={modalHandleCancel}>\r\n              Отмена\r\n            </Button>,\r\n            <Button disabled={!value} key=\"submit\" type=\"primary\" loading={confirmLoading} onClick={modalHandleOk}>\r\n              Создать\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <Select\r\n            showSearch\r\n            value={value}\r\n            placeholder=\"Введите username или e-mail пользователя\"\r\n            style={{width: '100%'}}\r\n            defaultActiveFirstOption={false}\r\n            notFoundContent={fetching ? <Spin size=\"small\" /> : <span>{'Пользователи не найдены'}</span>}\r\n            showArrow={false}\r\n            filterOption={false}\r\n            onSearch={usersHandleSearch}\r\n            onChange={usersHandleChange}\r\n          >\r\n            {options}\r\n          </Select>\r\n        </Modal>\r\n      </div>\r\n      <div className = \"sidebar__dialogs\">\r\n        <DialogsContainer/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;","import React, {useState, useEffect} from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Sidebar from '../components/Sidebar'\r\nimport { dialogsActions } from '../redux/actions'\r\nimport { userAPI } from '../utils/api'\r\n\r\n\r\nconst SidebarContainer = ({createDialog}) => {\r\n\r\n  const [usersSearchState, setUsersSearchState] = useState({\r\n    data: [],\r\n    fetching: false,\r\n    value: undefined,\r\n  }) \r\n  const [modalState, setModalState] = useState({\r\n    visible: false, \r\n    confirmLoading: false\r\n  })\r\n\r\n  const usersHandleSearch = value => {\r\n    if (value) {\r\n      setUsersSearchState({...usersSearchState, fetching: true})\r\n      console.log(value)\r\n      userAPI.find(value).then((response) => {\r\n        if(response.status === 200){\r\n          setUsersSearchState({...usersSearchState, fetching: false, data: response.data})\r\n        }\r\n      }).catch(err => {\r\n        setUsersSearchState({...usersSearchState, fetching: false})\r\n      });\r\n    } else {\r\n      \r\n      setUsersSearchState({...usersSearchState, data: []})\r\n    }\r\n  };\r\n\r\n  const usersHandleChange = value => {\r\n    setUsersSearchState({...usersSearchState, value})\r\n  };\r\n\r\n  const showModal = () => {\r\n    setModalState({...modalState, visible: true});\r\n  };\r\n\r\n  const modalHandleOk = () => {\r\n    if(usersSearchState.value){\r\n      setModalState({...modalState, confirmLoading: true})\r\n      createDialog(usersSearchState.value).then(() => {\r\n        setModalState({visible: false, confirmLoading: false})\r\n      })\r\n    }\r\n  };\r\n\r\n  const modalHandleCancel = () => {\r\n    setModalState({...modalState, visible: false});\r\n  };\r\n\r\n  return (\r\n    <Sidebar \r\n      showModal={showModal} \r\n      modalHandleCancel={modalHandleCancel} \r\n      modalHandleOk={modalHandleOk} \r\n      modalState={modalState} \r\n      usersHandleSearch={usersHandleSearch}\r\n      usersHandleChange={usersHandleChange} \r\n      usersSearchState={usersSearchState}\r\n    />\r\n  );\r\n};\r\n\r\nexport default connect((state) =>  state, dialogsActions)(SidebarContainer);","import React from 'react'\r\nimport './Home.scss'\r\nimport  CurrentDialogContainer  from '../../containers/CurrentDialogContainer'\r\nimport  SidebarContainer  from '../../containers/SidebarContainer'\r\n\r\nconst Home = () => {\r\n\r\n  return (\r\n    <section className = \"home\">\r\n      <div className=\"chat\">\r\n        <div className=\"chat__sidebar\">\r\n          <SidebarContainer/>\r\n        </div>\r\n        <div className=\"chat__dialog\">\r\n          <div className = \"chat__dialog-messages\">\r\n            <CurrentDialogContainer/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Home","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport Auth from './pages/Auth'\nimport Home from './pages/Home'\nimport { userActions } from './redux/actions'\n\nfunction App({me, isAuth, token, fetchUserData}) {\n\n  useEffect(() => {\n    if(token && !me)\n      fetchUserData(token)\n  }, [me])\n  \n  return (\n    <div className=\"wrapper\">\n      <Router>\n        <Switch>\n          <Route exact path='/' render={() => isAuth ? <Redirect to=\"/im\"/>  : <Redirect to=\"/login\"/>}/> \n          <Route exact path={['/login', '/register']} render={() => isAuth ?  <Redirect to=\"/im\"/> : <Auth/>}/>\n          <Route exact path='/im' render={() => isAuth ? <Home/> : <Redirect to=\"/login\"/>}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default connect(({ user: {isAuth, token, data} }) => ({isAuth, token, me: data}), userActions)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.scss'\nimport 'emoji-mart/css/emoji-mart.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport socket from './core/socket'\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}