{"version":3,"sources":["assets/img/readed.svg","assets/img/noreaded.svg","assets/img/wave.svg","assets/img/play.svg","assets/img/pause.svg","components/Button/index.js","components/Block/index.js","utils/helpers/validateField.js","modules/LoginForm/components/LoginForm.jsx","utils/validate.js","core/axios.js","utils/api/index.js","utils/helpers/openNotification.js","redux/actions.js","modules/LoginForm/containers/LoginForm.js","components/FormField/index.js","modules/RegistrationForm/components/RegistrationForm.jsx","modules/RegistrationForm/containers/RegistrationForm.js","pages/Auth/index.js","utils/helpers/convertCurrentTime.js","components/IconReaded/index.js","utils/helpers/generateGradient.js","components/Avatar/index.js","components/Message/index.js","components/MessageInput/index.js","containers/InputMessageContainer.js","components/Dialog/index.js","containers/CurrentDialogContainer.js","components/DialogItem/index.js","components/Dialogs/index.js","containers/DialogsContainer.js","components/Sidebar/index.js","containers/SidebarContainer.js","pages/Home/index.js","App.js","serviceWorker.js","redux/reducers/dialogs.js","redux/reducers/currentDialog.js","redux/reducers/user.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","Button","props","disabled","className","ClassNames","size","Block","children","validate","touched","errors","layout","labelCol","span","wrapperCol","LoginForm","values","handleChange","handleBlur","handleSubmit","isSubmitting","isValid","Fragment","onFinish","Item","name","help","email","onChange","onBlur","validateStatus","hasFeedback","rules","required","message","placeholder","password","Password","type","htmlType","to","isAuth","value","test","repeatPassword","Object","keys","forEach","key","instance","axios","create","baseURL","dialogsListAPI","get","headers","window","localStorage","token","myId","partnerId","post","author","partner","text","messagesAPI","dialog","id","userAPI","postData","title","notification","description","dialogsActions","setDialogs","items","payload","addDialog","clearDialogs","setPartnerStatus","isOnline","updateUnreadedCount","dialogId","unreadedCount","setCurrentDialog","dispatch","getState","user","data","socket","currentDialog","dialogs","filter","_id","emit","dialog_id","partner_id","updateLastMessage","updateLastMessageReaded","createDialog","then","fetchDialogs","length","currentDialogActions","setMessages","clearCurrentDialog","addMessage","updateIsReaded","sendMessage","setLoading","isLoading","fetchMessages","userActions","setUserData","clearUserData","disconnect","clear","setToken","setIsAuth","socketCreateConnection","io","connect","query","fetchUserData","fetchUserLogin","status","openNotification","fetchUserRegistration","state","withRouter","history","initialValues","validateFunc","onSubmit","setSubmitting","push","catch","err","FormField","defaultValue","RegistrationForm","setTouched","onClick","Auth","exact","path","component","FormLogin","convertCurrentTime","currTime","Math","floor","IconReaded","isMe","isReaded","src","readedSvg","noRreadedSvg","alt","hash","substr","split","map","char","number","charCodeAt","r","g","b","color","tinycolor","lighten","saturate","toHexString","lightenColor","getAvatar","avatar","Avatar","avatarSrc","firstChar","username","charAt","style","background","generateGradient","MessageAudio","audioSrc","useState","isPlaying","setPlaying","currentTime","setCurrentTime","progress","setProgress","duration","setDuration","audioElem","useRef","useEffect","current","addEventListener","ref","preload","width","pause","play","pauseSvg","playSvg","waveSvg","Message","date","audio","attachments","isTyping","messageCreatedTime","setMessageCreatedTime","intervalId","clearInterval","distanceInWordsToNow","Date","addSuffix","locale","ru","setInterval","classNames","fullname","item","index","url","filename","defaultProps","MessageInput","inputSubmitHandler","handleTyping","setValue","e","target","onKeyUp","shape","icon","SendOutlined","fontSize","me","createdAt","toISOString","Dialog","blockRef","typing","messages","partnerLastSeen","myData","useSelector","last_seen","tip","renderWithCondition","loading","setPartner","isPartnerTyping","setIsPartnerTyping","setPartnerLastSeen","timeoutId","isEmpty","formatDistanceToNow","onUserDisconnected","userId","onMessageReadedHandler","onMessageCreatedHandler","msg","clearTimeout","onMessageTyping","typingDialogId","scrollTo","setTimeout","on","removeListener","DialogItem","created_at","unreaded","lastMessage","onSelect","userData","setIsMe","bind","isToday","parseISO","format","DialogItems","onSelectDialog","orderBy","image","Empty","PRESENTED_IMAGE_SIMPLE","imageStyle","height","Dialogs","onSearch","inputValue","Search","toLowerCase","currentDialogId","filtered","setFiltered","setPartnerTyping","onDialogCreated","onUserConnected","indexOf","Sidebar","modalHandleOk","showModal","modalHandleCancel","modalState","usersHandleChange","usersHandleSearch","usersSearchState","messageHandleChange","logout","visible","confirmLoading","fetching","options","d","Option","TeamOutlined","form","FormOutlined","onCancel","footer","showSearch","defaultActiveFirstOption","notFoundContent","showArrow","filterOption","marginTop","TextArea","autoSize","minRows","maxRows","LogoutOutlined","undefined","setUsersSearchState","setModalState","setMessage","response","Home","render","Boolean","location","hostname","match","initialState","handlers","DIALOGS_SET_ITEMS","CLEAR_DIALOGS","ADD_DIALOG","UPDATE_LAST_MESSAGE","UPDATE_LAST_MESSAGE_READED","UPDATE_UNREADED_COUNT","SET_PARTNER_STATUS","DEFAULT","SET_LOADING","SET_CURRENT_DIALOG","CLEAR_CURRENT_DIALOG","ADD_MESSAGE","SET_CURRENT_DIALOG_ID","UPDATE_IS_READED","USER_SET_DATA","CLEAR_USER_DATA","SOCKET_CREATE_CONNECTION","SET_TOKEN","SET_IS_AUTH","combineReducers","handle","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","rootReducer","applyMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console"],"mappings":"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","file":"static/js/main.527dbe56.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/readed.c1f419d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/noreaded.3c841bf6.svg\";","module.exports = __webpack_public_path__ + \"static/media/wave.2b8196a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.65f03140.svg\";","module.exports = __webpack_public_path__ + \"static/media/pause.a61933e8.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button as BaseButton } from 'antd'\r\nimport './Button.scss'\r\nimport ClassNames from 'classnames'\r\n\r\nconst Button = (props) => (\r\n   <BaseButton disabled={props.disabled} className={ClassNames(\"button\", props.className, {\"button--large\": props.size === \"large\"})} {...props}/>\r\n)\r\n\r\nButton.propTypes = {\r\n  className: PropTypes.string\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport './Block.scss'\r\nimport ClassNames from 'classnames'\r\n\r\nconst Block = ({ children, className }) => (<div className={ClassNames('block', className)}> {children} </div>)\r\n\r\nexport default Block","const validate = (touched, errors) => touched ? errors && touched ? 'error' : 'success' : ''\r\n\r\nexport default validate","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Form, Input } from 'antd'\r\nimport Button from '../../../components/Button'\r\nimport Block from '../../../components/Block'\r\nimport validate from '../../../utils/helpers/validateField'\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 0,\r\n  },\r\n  wrapperCol: {\r\n    span: 25,\r\n  },\r\n};\r\n\r\nconst LoginForm = ({\r\n  values,\r\n  errors,\r\n  touched,\r\n  handleChange,\r\n  handleBlur,\r\n  handleSubmit,\r\n  isSubmitting,\r\n  isValid\r\n  }) => {\r\n\r\n  const onFinish = () => {\r\n    \r\n    handleSubmit()\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className = \"auth__top\">\r\n        <h2>Войти в аккаунт</h2>\r\n        <p>Пожалуйста, войдите в свой аккаунт</p>\r\n      </div>\r\n      <Block>   \r\n        <Form {...layout} onFinish={onFinish}>\r\n          <Form.Item \r\n            name=\"email\"  \r\n            help={touched.email && errors.email}\r\n            onChange = {handleChange} \r\n            onBlur = {handleBlur}  \r\n            validateStatus={validate(touched.email, errors.email)}\r\n            hasFeedback \r\n            rules={[{required: true,message: 'Please input your E-Mail'}]}>\r\n            <Input size=\"large\" placeholder=\"E-Mail\"/>\r\n          </Form.Item>\r\n          <Form.Item \r\n            name=\"password\" \r\n            help={touched.password && errors.password}\r\n            onChange = {handleChange} \r\n            onBlur = {handleBlur} \r\n            validateStatus={validate(touched.password, errors.password)}\r\n            hasFeedback \r\n            rules={[{required: true,message: 'Please input your password'}]}>\r\n            <Input.Password size=\"large\" placeholder=\"Password\"/>\r\n          </Form.Item>\r\n          <Form.Item>\r\n          {isSubmitting && !isValid && <span>Ошибка!</span>}\r\n          <Button disabled={isSubmitting} size=\"large\" type=\"primary\" htmlType=\"submit\">Войти в аккаунт</Button>\r\n          </Form.Item>\r\n        </Form>\r\n        <Link className=\"auth__register-link\" to=\"/register\">Зарегистрироваться</Link>\r\n      </Block>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default LoginForm","const validate = ({ isAuth, values, errors }) => {\r\n  const rules = {\r\n    email: value => {\r\n      if (!value) {\r\n        errors.email = 'Введите E-Mail';\r\n      } else if (\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(value)\r\n      ) {\r\n        errors.email = 'Неверный E-Mail';\r\n      }\r\n    },\r\n    name: value =>{\r\n      if (!value) {\r\n        errors.name = 'Введите ваше имя';\r\n      }\r\n    },\r\n    password: value => {\r\n      if (!value){\r\n        errors.password = \"Введите пароль\"\r\n      } else if (!isAuth && !/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/i.test(value))\r\n        errors.password = \"Слишком легкий пароль\"\r\n    },\r\n    repeatPassword: value =>{\r\n      if (!value) {\r\n        errors.repeatPassword = 'Повторите пароль';\r\n      } else if (value !== values.password){\r\n        errors.repeatPassword = 'Пароли не совпадают';\r\n      }\r\n    },\r\n  }\r\n  Object.keys(values).forEach(key => \r\n    rules[key] && rules[key](values[key])\r\n  )\r\n}\r\n\r\nexport default validate","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  //baseURL: 'http://localhost:3003'\r\n  baseURL: 'https://whispering-dawn-05999.herokuapp.com/'\r\n});\r\n\r\nexport default instance","import axios from '../../core/axios'\r\n\r\nexport const dialogsListAPI = {\r\n  getAllDialogs: () => axios.get('/dialogs', {\r\n    headers: {\r\n      'token': window.localStorage.token \r\n    }\r\n  }),\r\n  createDialog: (myId, partnerId, message) => axios.post('/dialogs', {\r\n    author: myId,\r\n    partner: partnerId,\r\n    text: message, \r\n  },\r\n  {\r\n    headers: {\r\n      'token': window.localStorage.token \r\n    }\r\n  })\r\n}\r\n\r\nexport const messagesAPI = {\r\n  sendMessage: (text, dialog) => axios.post('/messages/', {\r\n    text,\r\n    dialog\r\n  },\r\n  {\r\n    headers: {\r\n      'token': window.localStorage.token \r\n    }\r\n  }),\r\n  getAllByDialogId: id => axios.get(`/messages/${id}`)\r\n}\r\n\r\nexport const userAPI = {\r\n  login: postData => axios.post('/user/login', postData),\r\n  find: value => axios.get(`/user/find?query=${value}`, {\r\n    headers: {\r\n      'token': window.localStorage.token \r\n    }\r\n  }),\r\n  getMe: token => axios.get('/user/me', {\r\n    headers: {\r\n      'token': token \r\n    }\r\n  }),\r\n  register: postData => axios.post('/user/registration', postData),\r\n}","import { notification } from 'antd'\r\n\r\nexport default ({text, title, type = 'info'}) => notification[type]({\r\n  message: title,\r\n  description: text\r\n})","import { dialogsListAPI, messagesAPI, userAPI } from '../utils/api'\r\nimport openNotification from '../utils/helpers/openNotification'\r\nimport io from 'socket.io-client'\r\n\r\nexport const dialogsActions = {\r\n  setDialogs: items => ({\r\n    type: 'DIALOGS_SET_ITEMS',\r\n    payload: items\r\n  }),\r\n  addDialog: dialog => ({\r\n    type: 'ADD_DIALOG',\r\n    payload: dialog\r\n  }),\r\n  clearDialogs: () => ({\r\n    type: 'CLEAR_DIALOGS'\r\n  }),\r\n  setPartnerStatus: (partnerId, isOnline) => ({\r\n    type: 'SET_PARTNER_STATUS',\r\n    payload: {\r\n      partnerId, \r\n      isOnline\r\n    }\r\n  }),\r\n  updateUnreadedCount: (dialogId, unreadedCount) => ({\r\n    type: 'UPDATE_UNREADED_COUNT',\r\n    payload: {\r\n      dialogId, \r\n      unreadedCount\r\n    }\r\n  }),\r\n  setCurrentDialog: id => (dispatch, getState) => {\r\n    const {user: {data, socket}, dialogs: {dialogs}} = getState()\r\n    const currentDialog = dialogs.filter(dialog => dialog._id === id)[0]\r\n    const partnerId = data._id === currentDialog.author._id ? currentDialog.partner._id : currentDialog.author._id\r\n    socket.emit('DIALOG_ENTERED', {dialog_id: id, partner_id: partnerId})\r\n    dispatch(dialogsActions.updateUnreadedCount(currentDialog._id, 0))\r\n    dispatch({\r\n      type: 'SET_CURRENT_DIALOG_ID',\r\n      payload: id\r\n    })\r\n  },\r\n  updateLastMessage: (dialogId, message) => ({\r\n    type: 'UPDATE_LAST_MESSAGE',\r\n    payload: {\r\n      dialogId, \r\n      message\r\n    }\r\n  }),\r\n  updateLastMessageReaded: dialogId => ({\r\n    type: 'UPDATE_LAST_MESSAGE_READED',\r\n    payload: dialogId\r\n  }),\r\n  createDialog: (partnerId, message) => (dispatch, getState) => {\r\n    const {user: {data}} = getState()\r\n    return dialogsListAPI.createDialog(data._id, partnerId, message).then(({data}) => {\r\n      dispatch(dialogsActions.addDialog(data))\r\n    })\r\n  },\r\n  fetchDialogs: () => dispatch => {\r\n    return dialogsListAPI.getAllDialogs().then(({data}) => {\r\n      if(data.length)\r\n        dispatch(dialogsActions.setDialogs(data))\r\n    })\r\n  }\r\n}\r\n \r\nexport const currentDialogActions = {\r\n  setMessages: items => ({\r\n    type: 'SET_CURRENT_DIALOG',\r\n    payload: items\r\n  }),\r\n  clearCurrentDialog: () => ({\r\n    type: 'CLEAR_CURRENT_DIALOG'\r\n  }),\r\n  addMessage: message => ({\r\n    type: 'ADD_MESSAGE',\r\n    payload: message\r\n  }),\r\n  updateIsReaded: (dialogId, partnerId) => (dispatch, getState) => {\r\n    const {user: {data}} = getState()\r\n    dispatch({\r\n      type: 'UPDATE_IS_READED',\r\n      payload: {dialogId, myId: data._id}\r\n    })\r\n  },\r\n  sendMessage: text => (dispatch, getState) => {\r\n    const {currentDialog: {currentDialog}} = getState()\r\n    messagesAPI.sendMessage(text, currentDialog)\r\n  },\r\n  setLoading: (isLoading) => ({\r\n    type: 'SET_LOADING',\r\n    payload: isLoading\r\n  }),\r\n  fetchMessages: dialogId => dispatch => {\r\n    dispatch(currentDialogActions.setLoading(true))\r\n    messagesAPI.getAllByDialogId(dialogId).then(({data}) => {\r\n      dispatch(currentDialogActions.setMessages(data || null))\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const userActions = {\r\n  setUserData: data => ({\r\n    type: 'USER_SET_DATA',\r\n    payload: data\r\n  }),\r\n  clearUserData: () => (dispatch, getState) => {\r\n    const {user: {socket}} = getState()\r\n    socket.disconnect()\r\n    window.localStorage.clear()\r\n    dispatch({\r\n      type: 'CLEAR_USER_DATA'\r\n    })\r\n  },\r\n  setToken: token => ({\r\n    type: 'SET_TOKEN',\r\n    payload: token\r\n  }),\r\n  setIsAuth: isAuth => ({\r\n    type: 'SET_IS_AUTH',\r\n    payload: isAuth\r\n  }),\r\n  socketCreateConnection: token => ({\r\n    type: 'SOCKET_CREATE_CONNECTION',\r\n    //payload: io.connect('http://localhost:3003', {\r\n    payload: io.connect('https://whispering-dawn-05999.herokuapp.com/', {  \r\n      query: {\r\n        token\r\n      }\r\n    })\r\n  }),\r\n  fetchUserData: token => dispatch => {\r\n    userAPI.getMe(token).then(({ data }) => {\r\n      dispatch(userActions.setUserData(data))\r\n    })\r\n  },\r\n  fetchUserLogin:  postData =>  (dispatch, getState) => {\r\n    return userAPI.login(postData).then(({ data }) => {\r\n        const {status, token} = data\r\n        if(status === 'error'){\r\n          openNotification({text: 'Неверный логин или пароль', title: 'Ошибка при авторизации', type: 'error'})\r\n        }\r\n        else{\r\n          openNotification({title: 'Отлично!', text: 'Авторизация успешна', type: 'success'})\r\n          window.localStorage.token = token\r\n          const {user: {socket}} = getState()\r\n          dispatch(userActions.socketCreateConnection(token))\r\n          dispatch(userActions.setToken(token))\r\n          dispatch(userActions.setIsAuth(true))\r\n          dispatch(userActions.fetchUserData(token))\r\n        }\r\n        return status\r\n      })\r\n  },\r\n  fetchUserRegistration: postData =>  (dispatch, getState)=> {\r\n    return userAPI.register(postData).then(({ data }) => {\r\n        const {status, token} = data\r\n        if(status === 'error'){\r\n          openNotification({text: 'Ошибка при регистрации', title: 'Упс', type: 'error'})\r\n        }\r\n        else{\r\n          openNotification({title: 'Отлично!', text: 'Регистрация прошла успешно', type: 'success'})\r\n          window.localStorage.token = token\r\n          const {user: {socket}} = getState()\r\n          socket.disconnect()\r\n          dispatch(userActions.socketCreateConnection(token))\r\n          dispatch(userActions.setToken(token))\r\n          dispatch(userActions.setIsAuth(true))\r\n          dispatch(userActions.fetchUserData(token))\r\n        }\r\n        return status\r\n      })\r\n  }\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport LoginForm from '../components/LoginForm.jsx'\r\nimport { Formik } from 'formik';\r\nimport validateFunc from '../../../utils/validate'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { userActions } from '../../../redux/actions'\r\n\r\nconst FormikLogin = ({fetchUserLogin, history}) => (\r\n  <div>\r\n    <Formik\r\n      initialValues={{ email: '', password: '' }}\r\n      validate = {values => {\r\n        const errors = {}\r\n        validateFunc({ isAuth: true, values, errors  })\r\n        return errors\r\n      }}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setSubmitting(true)\r\n        fetchUserLogin(values).then(status => {\r\n          \r\n          if(status === 'success'){\r\n            history.push('/')\r\n          }\r\n          else{\r\n            setSubmitting(false)\r\n          }\r\n          \r\n        }).catch(err => {\r\n          setSubmitting(false)\r\n        })\r\n      }}\r\n    >\r\n      {LoginForm}\r\n    </Formik>\r\n  </div>\r\n);\r\n\r\nexport default connect(state => state, userActions)(withRouter(FormikLogin))","import React from 'react';\r\nimport { Form, Input } from 'antd'\r\nimport validate from '../../utils/helpers/validateField'\r\n\r\nconst FormField = ({\r\n  name,\r\n  placeholder,\r\n  type,\r\n  handleChange,\r\n  handleBlur,\r\n  touched,\r\n  errors,\r\n  defaultValue\r\n}) => {\r\n  return (\r\n    <Form.Item \r\n      help={touched[name] && errors[name]} \r\n      name={name}\r\n      onChange={handleChange} \r\n      onBlur={handleBlur}\r\n      validateStatus={validate(touched[name], errors[name])} \r\n      hasFeedback \r\n      defaultValue = {defaultValue}\r\n      >\r\n        {type === \"password\" ? <Input.Password size=\"large\" placeholder={placeholder}/> : <Input size=\"large\" placeholder={placeholder}/>}\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport default FormField;","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Form } from 'antd'\r\nimport Button from '../../../components/Button'\r\nimport FormField from '../../../components/FormField'\r\nimport Block from '../../../components/Block'\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 0,\r\n  },\r\n  wrapperCol: {\r\n    span: 25,\r\n  }\r\n};\r\n\r\nconst RegistrationForm = ({\r\n  values,\r\n  errors,\r\n  touched,\r\n  handleChange,\r\n  handleBlur,\r\n  handleSubmit,\r\n  setTouched\r\n}) => {\r\n  const onFinish = () => {\r\n    handleSubmit()\r\n  }\r\n  return (\r\n    \r\n    <React.Fragment>\r\n    <div className = \"auth__top\">\r\n      <h2>Зарегистрируйтесь</h2>\r\n      <p>Для входа в чат, нужно зарегистрироваться</p>\r\n    </div>\r\n    <Block>   \r\n      <Form {...layout} onFinish={onFinish}>\r\n        <FormField name=\"email\" placeholder=\"E-mail\" touched={touched} errors={errors} handleChange={handleChange} handleBlur={handleBlur} defaultValue={values.email}/>\r\n        <FormField name=\"name\" placeholder=\"Ваше имя\" touched={touched} errors={errors} handleChange={handleChange} handleBlur={handleBlur} defaultValue={values.name}/>\r\n        <FormField type=\"password\" name=\"password\" placeholder=\"Пароль\" touched={touched} errors={errors} handleChange={handleChange} handleBlur={handleBlur} defaultValue={values.password}/>\r\n        <FormField type=\"password\" name=\"repeatPassword\" placeholder=\"Повторите пароль\" touched={touched} errors={errors} handleChange={handleChange} handleBlur={handleBlur} defaultValue={values.repeatPassword}/>\r\n        <Form.Item>\r\n        <Button onClick = {() => {\r\n          setTouched({email: true, name: true, password: true, repeatPassword: true})\r\n        }} size=\"large\" type=\"primary\" htmlType=\"submit\">Зарегистрироваться</Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <Link className=\"auth__register-link\" to=\"/login\">Войти в аккаунт</Link>\r\n    </Block>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default RegistrationForm","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport RegistrationForm from '../components/RegistrationForm.jsx'\r\nimport { Formik } from 'formik';\r\nimport validateFunc from '../../../utils/validate'\r\nimport { userActions } from '../../../redux/actions'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst FormikRegistration = ({fetchUserRegistration, history}) => (\r\n  <div>\r\n    <Formik\r\n      initialValues={{ email: '', name:'', password: '', repeatPassword: '' }}\r\n      \r\n      validate = {values => {\r\n        const errors = {}\r\n        validateFunc({ isAuth: false, values, errors })\r\n        return errors\r\n      }}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        fetchUserRegistration(values).then(status => {\r\n          \r\n          if(status === 'success'){\r\n            history.push('/')\r\n          }\r\n          else{\r\n            setSubmitting(false)\r\n          }\r\n          \r\n        }).catch(err => {\r\n          setSubmitting(false)\r\n        })\r\n      }}\r\n    >\r\n      {RegistrationForm}\r\n    </Formik>\r\n  </div>\r\n);\r\n\r\nexport default connect(state => state, userActions)(withRouter(FormikRegistration))","import React from 'react'\r\nimport './Auth.scss'\r\nimport { FormLogin, RegistrationForm } from '../../modules'\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\n\r\nconst Auth = () => {\r\n\r\n  return (\r\n    <div className = \"auth\">\r\n      <div className = \"auth__wrapper\">\r\n        <Switch>\r\n          <Route exact path={['/', '/login']} component={FormLogin}/>\r\n          <Route exact path='/register' component={RegistrationForm}/>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Auth","const convertCurrentTime = currTime => {\r\n  if(!currTime) return '00:00'\r\n  return `${Math.floor(currTime / 60) >= 10 ? Math.floor(currTime / 60) : '0'+Math.floor(currTime / 60)}:${Math.floor(currTime % 60) >= 10 ? Math.floor(currTime % 60) : '0'+Math.floor(currTime % 60)}`\r\n}\r\n\r\nexport default convertCurrentTime","import React from 'react'\r\nimport readedSvg from '../../assets/img/readed.svg'\r\nimport noRreadedSvg from '../../assets/img/noreaded.svg'\r\nconst IconReaded = ({ isMe, isReaded, className }) =>(\r\n  <div className = {className}>\r\n    <img src={isReaded ? readedSvg : noRreadedSvg} alt=\"\"/>\r\n  </div>\r\n)\r\n\r\nexport default IconReaded","import tinycolor from 'tinycolor2'\r\n\r\nconst getCorrectIndex = number => {\r\n  if(number > 255) return number % 255\r\n  if(number < 0) return -number % 255\r\n  return number\r\n}\r\n\r\nexport default hash => {\r\n  const [r, g, b] = hash.substr(-3, 3).split('').map(char => getCorrectIndex(char.charCodeAt()))\r\n  return {\r\n    color: tinycolor({r, g , b}).lighten(10).saturate(20).toHexString(), \r\n    lightenColor: tinycolor({r, g , b}).saturate(20).lighten(30).toHexString()\r\n  }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport generateGradient from '../../utils/helpers/generateGradient'\r\nimport './Avatar.scss'\r\n\r\nconst getAvatar = avatar => {\r\n  if(avatar){\r\n    return avatar\r\n  }\r\n  else{\r\n\r\n  }\r\n}\r\n\r\nconst Avatar = ({avatarSrc, hash, username}) => {\r\n  const firstChar = username.charAt(0)\r\n  return (\r\n  <div className = \"avatar\">\r\n    {avatarSrc  \r\n      ? <img src={getAvatar(avatarSrc)} alt={`User avatar`}/>\r\n      : <div className=\"avatar__gradient\" style={{background: `linear-gradient(115deg, ${generateGradient(hash).color}, ${generateGradient(hash).lightenColor})`}}>\r\n          <span>{firstChar}</span>\r\n        </div>\r\n    }\r\n  </div>\r\n)}\r\n\r\nAvatar.propTypes = {\r\n  avatarSrc: PropTypes.string,\r\n  hash: PropTypes.string\r\n}\r\n\r\nexport default Avatar","import React, {useState, useRef, useEffect} from 'react'\r\nimport distanceInWordsToNow from 'date-fns/formatDistanceToNow'\r\nimport classNames from 'classnames'\r\nimport { ru } from 'date-fns/locale'\r\nimport PropTypes from 'prop-types'\r\nimport convertCurrentTime from '../../utils/helpers/convertCurrentTime'\r\nimport './Message.scss'\r\nimport IconReaded from '../IconReaded'\r\nimport Avatar from '../Avatar'\r\nimport waveSvg from '../../assets/img/wave.svg'\r\nimport playSvg from '../../assets/img/play.svg'\r\nimport pauseSvg from '../../assets/img/pause.svg'\r\n\r\nconst MessageAudio = ({audioSrc}) => {\r\n  const [isPlaying, setPlaying] = useState(false)\r\n  const [currentTime, setCurrentTime] = useState(0)\r\n  const [progress, setProgress] = useState(0)\r\n  const [duration, setDuration] = useState(0)\r\n  const audioElem = useRef(null)\r\n\r\n  useEffect(()=>{\r\n    if(audioElem.current){\r\n      audioElem.current.addEventListener('canplay', () => {\r\n        setDuration(audioElem.current.duration)\r\n      }, false)\r\n      audioElem.current.addEventListener('playing', () => {\r\n        setPlaying(true)\r\n      }, false)\r\n      audioElem.current.addEventListener('ended', () => {\r\n        setPlaying(false)\r\n        setProgress(0)\r\n        setCurrentTime(0)\r\n      }, false)\r\n      audioElem.current.addEventListener('pause', () => {\r\n        setPlaying(false)\r\n      }, false)\r\n      audioElem.current.addEventListener('timeupdate', () => {\r\n        setCurrentTime(audioElem.current.currentTime)\r\n      })\r\n    }\r\n  }, [])\r\n  useEffect(()=>{\r\n    if(audioElem.current){\r\n      setProgress((currentTime / duration) * 100)\r\n    }\r\n  }, [currentTime, duration])\r\n  const togglePlay = () => {\r\n    if(!isPlaying)\r\n      audioElem.current.play();\r\n    else\r\n      audioElem.current.pause();\r\n  }\r\n  return (\r\n     <div className=\"message__audio\">\r\n      <audio ref={audioElem} src={audioSrc} preload=\"metadata\"></audio>\r\n\r\n      <div className=\"message__audio-progress\" style={{width: progress + '%'}}></div>\r\n      <div className=\"message__audio-control\">\r\n        <div className=\"message__audio-btn\">\r\n          <button onClick={togglePlay}>\r\n            <img src={isPlaying ? pauseSvg : playSvg} alt=\"play-button\"/>\r\n          </button>\r\n        </div>\r\n        <div className=\"message__audio-wave\"><img src={waveSvg} alt=\"wave\"/></div>\r\n          <span className=\"message__audio-duration\">{convertCurrentTime(duration - currentTime)}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Message = ({avatar, text, date, user, isMe, isReaded, audio, attachments, isTyping}) => {\r\n  const [messageCreatedTime, setMessageCreatedTime] = useState()\r\n  const intervalId = useRef(null)\r\n\r\n  useEffect(() => {\r\n    clearInterval(intervalId.current)\r\n    if(date){\r\n      setMessageCreatedTime(distanceInWordsToNow(new Date(date), { addSuffix: true, locale: ru }))\r\n      intervalId.current = setInterval(() => {\r\n        setMessageCreatedTime(distanceInWordsToNow(new Date(date), { addSuffix: true, locale: ru }))\r\n      }, 60000)\r\n    }\r\n    return () => {\r\n      clearInterval(intervalId.current)\r\n    }\r\n  }, [date])\r\n\r\n  if(!(audio || text || isTyping || attachments.length))\r\n    return <div></div>\r\n  return (\r\n   <div className = {classNames('message', \r\n    {\r\n      'message--isme': isMe, \r\n      'message--is-typing': isTyping, \r\n      'message--image': attachments && attachments.length === 1,\r\n      'message--audio': audio\r\n    })}>\r\n     <div className = \"message__wrap\">\r\n      <div className=\"message__avatar\">\r\n        <Avatar avatarSrc={avatar} hash={user._id} username={user.fullname}/>\r\n      </div>\r\n      <div>\r\n        <div className=\"message__content\">\r\n          {(audio || text || isTyping) && \r\n            <div className=\"message__bubble\">\r\n              <div className = \"message__typing\">\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </div>\r\n              { text && <p className=\"message__text\">{text}</p>}\r\n              {audio && <MessageAudio audioSrc={audio}/>}\r\n            </div>}\r\n          {attachments.length \r\n            ? <div className = \"message__attachments\">\r\n                {attachments.map((item, index) => (\r\n                  <div key = {index} className = \"message__attachments-item\">\r\n                    <img src={item.url} alt={item.filename}/>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            : ''\r\n          }\r\n        </div>\r\n        {!isTyping && <span className=\"message__date\">{messageCreatedTime}</span>}\r\n      </div>\r\n        {isMe ? <IconReaded className=\"message__readed-icon\" isReaded={isReaded}/> : ''}\r\n     </div>\r\n     \r\n   </div>\r\n)}\r\n\r\nMessage.defaultProps = {\r\n  user: {},\r\n  attachments: []\r\n}\r\n\r\nMessage.propTypes = {\r\n  avatar: PropTypes.string,\r\n  text: PropTypes.string,\r\n  date: PropTypes.string,\r\n  user: PropTypes.object,\r\n  attachments: PropTypes.array,\r\n  isTyping: PropTypes.bool\r\n}\r\n\r\nexport default Message","import React, {useState} from 'react'\r\nimport './MessageInput.scss'\r\nimport {SendOutlined} from '@ant-design/icons'\r\nimport { Button, Input } from 'antd'\r\n\r\nfunction MessageInput({ inputSubmitHandler, handleTyping }) {\r\n\r\n  const [value, setValue] = useState()\r\n  return (\r\n    <div className = \"message-input\">\r\n      <div className=\"message-input__textarea\">\r\n        <Input \r\n          onChange={e => { setValue(e.target.value)} } \r\n          onKeyUp = {(e) => {\r\n            if(e.key === \"Enter\" && e.target.value){\r\n              inputSubmitHandler(value)\r\n              setValue('')\r\n            }\r\n            else\r\n              handleTyping()\r\n          }}\r\n          placeholder=\"Введите текст сообщения...\" \r\n          size = \"large\"\r\n          value = {value}/>\r\n      </div>\r\n      <div className=\"message-input__actions\">\r\n        <Button onClick = {() => {\r\n            if(value){\r\n              inputSubmitHandler(value)\r\n              setValue('')\r\n            }\r\n          }} \r\n          className=\"ant-btn--no-border\" \r\n          shape=\"circle\" \r\n          icon={<SendOutlined  \r\n          style = {{fontSize: '20px'}}/>} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageInput;","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport InputMessage from '../components/MessageInput'\r\nimport { currentDialogActions } from '../redux/actions'\r\n\r\n\r\n\r\nconst InputMessageContainer = ({me, dialogId, socket, sendMessage, addMessage }) => {\r\n  \r\n  const handleTyping = () => {\r\n    socket.emit('MESSAGE_TYPING', {user: me, dialogId})\r\n  }\r\n\r\n  const inputSubmitHandler = (value) => {\r\n    if(dialogId){\r\n      addMessage({text: value, isReaded: false, user: me, createdAt: new Date().toISOString(), dialog: {_id: dialogId}})\r\n      sendMessage(value)\r\n    }\r\n  }\r\n    \r\n  return (\r\n    <InputMessage inputSubmitHandler = {inputSubmitHandler} handleTyping={handleTyping}/>\r\n  );\r\n};\r\n\r\nexport default connect(({user, currentDialog}) =>  ({me: user.data, socket: user.socket, dialogId: currentDialog.currentDialog}),  currentDialogActions)(InputMessageContainer);","import React from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport  Message  from '../Message'\r\nimport  MessageInputContainer  from '../../containers/InputMessageContainer'\r\nimport { Empty } from 'antd'\r\nimport './Dialog.scss'\r\nimport { Spin } from 'antd';\r\nimport classNames from 'classnames'\r\n\r\n\r\nconst renderWithCondition = (isLoading, messages, myData) => {\r\n  if(isLoading || !myData){\r\n    return <Spin tip=\"Загрузка сообщений...\" size=\"large\"/>\r\n  }\r\n  else if (!messages){\r\n    return <Empty description=\"Откройте диалог\"/> \r\n  }\r\n  else if(messages.length === 0){\r\n    return <Empty description=\"Диалог пуст\"/> \r\n  }\r\n  return messages.map( (message, index) => \r\n    (\r\n      <Message\r\n        key={index}\r\n        avatar = {message.user.avatar} \r\n        text={message.text} \r\n        date={message.createdAt} \r\n        attachments = {message.attachments}\r\n        user={message.user}\r\n        isMe = {message.user._id === myData._id}\r\n        isReaded = {message.isReaded}\r\n      />\r\n    )\r\n  )\r\n}\r\n\r\nconst Dialog = ({blockRef, isLoading, typing, messages, partnerLastSeen, partner }) => {\r\n  const myData = useSelector(({user: {data}}) => data)\r\n  return (\r\n    <div className = \"dialog\">\r\n      <div className=\"dialog__header\">\r\n        <div className=\"dialog__header-center\">\r\n          <b className=\"dialog__header-username\">{partner.fullname}</b>\r\n          <div className=\"dialog__header-status\">\r\n            {partner.last_seen && <div className = {classNames(\"status\", {\"status--online\": partner.isOnline})}>{ partner.isOnline ? 'онлайн' : `был(а) в сети ${partnerLastSeen}`}</div>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div ref={blockRef} className = \"dialog__messages\">\r\n        {renderWithCondition(isLoading, messages, myData)}\r\n        {messages && <Message isTyping={typing} user={partner} avatar={partner.avatar} isMe={false}/> }\r\n      </div>\r\n      <div className=\"dialog__input\">\r\n        <MessageInputContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialog;","import React, {useState, useEffect, useRef} from 'react';\r\nimport { connect } from 'react-redux'\r\nimport Dialog from '../components/Dialog'\r\nimport { currentDialogActions, dialogsActions } from '../redux/actions'\r\nimport isEmpty from 'lodash/isEmpty'\r\nimport { formatDistanceToNow } from 'date-fns'\r\nimport { ru } from 'date-fns/locale'\r\n\r\nconst CurrentDialogContainer = (\r\n  {\r\n    me, \r\n    isLoading, \r\n    socket, \r\n    dialogId, \r\n    dialogs, \r\n    messages, \r\n    fetchMessages, \r\n    addMessage, \r\n    updateIsReaded, \r\n  }) => {\r\n\r\n  const [partner, setPartner] = useState({})\r\n  const [isPartnerTyping, setIsPartnerTyping] = useState(false)\r\n  const [partnerLastSeen, setPartnerLastSeen] = useState()\r\n  const ref = useRef(null)\r\n  const intervalId = useRef(null)\r\n  const timeoutId = useRef(null)\r\n\r\n  useEffect(() => {\r\n    if(me && dialogs && dialogId){\r\n      const {author, partner} = dialogs.filter(dialog => dialog._id === dialogId)[0]\r\n      setPartner(author._id === me._id ? partner : author)\r\n    }\r\n  }, [dialogs, dialogId, me])\r\n\r\n  useEffect(() => {\r\n    clearInterval(intervalId.current)\r\n    if(!isEmpty(partner) && !partner.isOnline){\r\n      setPartnerLastSeen(formatDistanceToNow(new Date(partner.last_seen), { addSuffix: true, locale: ru }))\r\n      intervalId.current = setInterval(() => {\r\n        setPartnerLastSeen(formatDistanceToNow(new Date(partner.last_seen), { addSuffix: true, locale: ru }))\r\n      }, 60000)\r\n    }\r\n    return () => {\r\n      clearInterval(intervalId.current)\r\n    }\r\n  }, [dialogs, partner])\r\n\r\n  const onUserDisconnected = userId => {\r\n    if(dialogId && userId === partner._id)\r\n      setPartnerLastSeen(formatDistanceToNow(new Date(partner.last_seen), { addSuffix: true, locale: ru }))\r\n  }\r\n  \r\n  const onMessageReadedHandler = ({dialog_id, partner_id}) => {\r\n    if(me && dialogId === dialog_id && partner_id === me._id){\r\n      updateIsReaded(dialog_id)\r\n    }\r\n  }\r\n\r\n  const onMessageCreatedHandler = msg => {\r\n    if(dialogId && me && dialogId === msg.dialog._id){\r\n      if( me && msg.user._id !== me._id) {\r\n        setIsPartnerTyping(false)\r\n        clearTimeout(timeoutId.current)\r\n        addMessage(msg)\r\n        let {author, partner} = dialogs.filter(dialog => dialog._id === dialogId)[0]\r\n        partner = author._id === me._id ? partner : author\r\n        socket.emit('DIALOG_ENTERED', {dialog_id: dialogId, partner_id: partner._id})\r\n      }   \r\n    }\r\n  }\r\n\r\n  const onMessageTyping = (({user, dialogId: typingDialogId}) => {\r\n    if(me._id !== user._id && dialogId === typingDialogId && !isPartnerTyping){\r\n      clearTimeout(timeoutId.current)\r\n      setIsPartnerTyping(true)\r\n      if(ref.current)\r\n        ref.current.scrollTo(0, 9999999)\r\n      timeoutId.current = setTimeout(() => {setIsPartnerTyping(false)}, 2000)\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    \r\n    if(dialogId)\r\n      fetchMessages(dialogId)\r\n    socket.on('SERVER:MESSAGE_CREATED', onMessageCreatedHandler)\r\n    socket.on('MESSAGE_TYPING', onMessageTyping)\r\n    socket.on('SERVER:MESSAGES_READED', onMessageReadedHandler)\r\n    socket.on('USER_DISCONNECTED', onUserDisconnected)\r\n    return () => {    \r\n      socket.removeListener('SERVER:MESSAGE_CREATED', onMessageCreatedHandler)\r\n      socket.removeListener('USER_DISCONNECTED', onUserDisconnected)\r\n      socket.removeListener('MESSAGE_TYPING', onMessageTyping)\r\n      socket.removeListener('SERVER:MESSAGE_READED', onMessageReadedHandler)\r\n    }\r\n  }, [dialogId, partner, me])\r\n\r\n  useEffect(() => {\r\n    if(ref.current)\r\n      ref.current.scrollTo(0, 9999999)\r\n  }, [messages])\r\n  \r\n  return (\r\n    <Dialog partner={partner} blockRef = {ref} typing={isPartnerTyping} partnerLastSeen={partnerLastSeen} isLoading = {isLoading} messages={messages}/>\r\n  );\r\n};\r\n\r\nexport default connect(({ currentDialog, dialogs, user }) =>  {\r\n  return { me: user.data, socket: user.socket, dialogId: currentDialog.currentDialog, dialogs: dialogs.dialogs, messages: currentDialog.items, isLoading: currentDialog.loading}\r\n},  {...currentDialogActions, ...dialogsActions})(CurrentDialogContainer);","import React, {useState, useEffect} from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport { format, isToday, parseISO } from 'date-fns'\r\nimport IconReaded from '../IconReaded'\r\nimport \"./DialogItem.scss\"\r\nimport Avatar from '../Avatar'\r\n\r\nconst getMessageTime = created_at => {\r\n  if(isToday(parseISO(created_at))){\r\n    return format(new Date(created_at), 'kk:mm')\r\n  }\r\n  return format(new Date(created_at), 'd.MM.yy')\r\n}\r\n\r\n const DialogItem = ({ id, partner, unreaded, isTyping, lastMessage, user = lastMessage.user, onSelect }) => {\r\n  const userData = useSelector(({user: {data}}) => data)\r\n  const [isMe, setIsMe] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(userData && user){\r\n      setIsMe(userData._id === user._id)\r\n    }\r\n  }, [userData, user])\r\n\r\n  return(\r\n  <div onClick = {onSelect.bind(this, id)} className = {classNames(\"dialogs__item\", {\"dialogs__item--online\": partner.isOnline})}>\r\n    <div className='dialogs__item-avatar'>\r\n      <Avatar avatarSrc={partner.avatar} hash={partner._id} username={partner.fullname}/>\r\n    </div>\r\n    <div className=\"dialogs__item-info\">\r\n      <div className=\"dialogs__item-info-top\">\r\n        <b className=\"dialogs__username\">{partner.fullname}</b>\r\n        <span className=\"dialogs__date\">\r\n          {getMessageTime(lastMessage.createdAt)}\r\n        </span>\r\n      </div>\r\n      <div className=\"dialogs__item-info-bottom\">\r\n        <p className=\"dialogs__text\">\r\n          {isTyping ? 'печатает...' : `${ isMe ? 'You' : partner.fullname}: ${lastMessage.text}`}\r\n        </p>\r\n      </div>\r\n      {isMe ? <IconReaded className=\"dialogs__readed-icon\" isReaded = {lastMessage.isReaded} /> : ''}\r\n      {(!isMe && unreaded) ? <div className=\"dialogs__count\">{unreaded}</div> : ''}\r\n    </div>\r\n  </div>\r\n)}\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport  DialogItem  from '../DialogItem'\r\nimport orderBy from 'lodash/orderBy'\r\nimport { Input, Empty, Spin } from 'antd'\r\nimport './Dialogs.scss'\r\n\r\n\r\nconst DialogItems = ({dialogs, me, onSelectDialog}) => {\r\n  if(me){\r\n    return dialogs.length\r\n      ? orderBy(\r\n        dialogs,\r\n        ({lastMessage}) => lastMessage.createdAt,\r\n        [\"desc\"]\r\n      ).map(dialog => {\r\n        const partner = me._id === dialog.partner._id ? dialog.author : dialog.partner\r\n        return(\r\n          <DialogItem onSelect={onSelectDialog} partner={partner} isTyping={dialog.isTyping || false}  key={dialog._id} id={dialog._id} lastMessage={dialog.lastMessage} unreaded = {dialog.unreaded}/>\r\n      )})\r\n      : <Empty\r\n          image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n          imageStyle={{height: 80}} \r\n          description=\"Диалоги не найдены\" \r\n        />\r\n  }\r\n  return <Spin size=\"large\"/>\r\n}\r\n\r\nconst Dialogs = ({ me, dialogs, onSearch, inputValue, onSelectDialog }) =>{\r\n  \r\n  return (\r\n  <div className=\"dialogs\">\r\n    <div className=\"dialogs__search\">\r\n      <Input.Search onChange={e => onSearch(e.target.value.toLowerCase())} placeholder=\"Поиск среди контактов\" size=\"large\" value={inputValue}/>\r\n    </div>\r\n    <DialogItems dialogs={dialogs} me={me} onSelectDialog = {onSelectDialog}/>\r\n    \r\n  </div>\r\n)}\r\n\r\nexport default Dialogs","import React, {useState, useEffect, useRef} from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { dialogsActions } from '../redux/actions'\r\nimport Dialogs from '../components/Dialogs'\r\n\r\nconst DialogsContainer = ({ \r\n    me, \r\n    dialogs, \r\n    socket,\r\n    currentDialogId, \r\n    updateLastMessage,  \r\n    updateLastMessageReaded, \r\n    setCurrentDialog, \r\n    fetchDialogs, \r\n    addDialog, \r\n    updateUnreadedCount, \r\n    setPartnerStatus\r\n  }) => {\r\n  const [inputValue, setValue] = useState()\r\n  const [filtered, setFiltered] = useState(dialogs)\r\n  const timeoutId = useRef(null)\r\n\r\n  const onChangeInput = value => {\r\n    setFiltered(dialogs.filter(dialog => {\r\n      const partner = me._id === dialog.partner._id ? 'author' : 'partner'\r\n      return dialog[partner].fullname.toLowerCase().indexOf(value) >= 0 \r\n    }))\r\n    setValue(value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!dialogs.length)\r\n      fetchDialogs()\r\n    else setFiltered(dialogs)\r\n  }, [dialogs])\r\n\r\n  const onMessageCreatedHandler = msg => {\r\n    setPartnerTyping(false, msg.dialog._id)\r\n    clearTimeout(timeoutId.current)\r\n    if(currentDialogId !== msg.dialog._id && me._id !== msg.user._id){\r\n      for(let dialog of dialogs ){\r\n        if(dialog._id === msg.dialog._id){\r\n          updateUnreadedCount(msg.dialog._id, msg.dialog.unreaded++)\r\n        }\r\n      }\r\n    }\r\n    if(me && msg.dialog.author === me._id || msg.dialog.partner === me._id)\r\n      updateLastMessage(msg.dialog._id, msg) \r\n  }\r\n\r\n  const onMessageReadedHandler = ({dialog_id, partner_id}) => {\r\n    if(me && partner_id === me._id)\r\n      updateLastMessageReaded(dialog_id)\r\n  }\r\n\r\n  const onDialogCreated = dialog => {\r\n    if(me && me._id === dialog.partner._id){\r\n      addDialog(dialog)\r\n    }\r\n  }\r\n\r\n  const onUserConnected = userId => {\r\n    setPartnerStatus(userId, true)\r\n  }\r\n  const onUserDisconnected = userId => {\r\n    setPartnerStatus(userId, false)\r\n  }\r\n\r\n  const setPartnerTyping = (isTyping, dialogId) => {\r\n    setFiltered(filtered.map((dialog => {\r\n      if(dialogId === dialog._id)\r\n        dialog.isTyping = isTyping\r\n      return dialog\r\n    })))\r\n  }\r\n\r\n  const onMessageTyping = ({user, dialogId}) => {\r\n    if(me && me._id !== user._id){\r\n      clearTimeout(timeoutId.current)\r\n      setPartnerTyping(true, dialogId)\r\n      timeoutId.current = setTimeout(() => {\r\n        setPartnerTyping(false, dialogId)\r\n      }, 2000)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    socket.on('USER_CONNECTED', onUserConnected)\r\n    socket.on('USER_DISCONNECTED', onUserDisconnected)\r\n    socket.on('SERVER:DIALOG_CREATED', onDialogCreated)\r\n    socket.on('SERVER:MESSAGE_CREATED', onMessageCreatedHandler)\r\n    socket.on('SERVER:MESSAGES_READED', onMessageReadedHandler)\r\n    \r\n    return () => {\r\n      socket.removeListener('USER_CONNECTED', onUserConnected)\r\n      socket.removeListener('USER_DISCONNECTED', onUserDisconnected)\r\n      socket.removeListener('SERVER:MESSAGE_CREATED', onMessageCreatedHandler)\r\n      socket.removeListener('SERVER:MESSAGE_READED', onMessageReadedHandler)\r\n      socket.removeListener('SERVER:DIALOG_CREATED', onDialogCreated)\r\n    }\r\n  }, [me, currentDialogId])\r\n\r\n  useEffect(() => {\r\n    socket.on('MESSAGE_TYPING', onMessageTyping)\r\n    return () => {\r\n      socket.removeListener('MESSAGE_TYPING', onMessageTyping)\r\n    }\r\n  }, [me, dialogs])\r\n\r\n  return (\r\n    <Dialogs \r\n      me={me} \r\n      dialogs={filtered} \r\n      onSearch={onChangeInput} \r\n      inputValue={inputValue} \r\n      onSelectDialog={setCurrentDialog}\r\n    />\r\n  );\r\n};\r\n\r\nexport default connect(({user, dialogs: {dialogs}, currentDialog: {currentDialog} }) => ({dialogs: dialogs, socket: user.socket, currentDialogId: currentDialog, me: user.data}), dialogsActions)(DialogsContainer);","import React from 'react';\r\nimport './Sidebar.scss'\r\nimport { TeamOutlined, FormOutlined, LogoutOutlined } from '@ant-design/icons'\r\nimport { Modal,  Button, Select, Spin, Tooltip, Input } from 'antd'\r\nimport  DialogsContainer  from '../../containers/DialogsContainer'\r\n\r\nconst Sidebar = (\r\n  {\r\n    modalHandleOk, \r\n    showModal, \r\n    modalHandleCancel, \r\n    modalState, \r\n    usersHandleChange, \r\n    usersHandleSearch, \r\n    usersSearchState, \r\n    message,\r\n    messageHandleChange,\r\n    logout\r\n  }) => {\r\n  const {visible, confirmLoading} = modalState\r\n  const {value, fetching, data} = usersSearchState\r\n  const options = data.map(d => <Select.Option key={d._id}>{d.fullname}</Select.Option>);\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar__header\">\r\n        <div>\r\n          <TeamOutlined  style={{ fontSize: '18px'}}/>\r\n          <span>Список диалогов</span>\r\n        </div>\r\n        <div>\r\n          <Tooltip title=\"Создать диалог\">\r\n          <Button \r\n            onClick={showModal} \r\n            className=\"ant-btn--no-border\" \r\n            form=\"circle\" \r\n            icon={<FormOutlined \r\n            style={{ fontSize: '18px'}}/>}\r\n          />\r\n          </Tooltip>\r\n          <Modal\r\n            title=\"Создание диалога\"\r\n            visible={visible}\r\n            onCancel={modalHandleCancel}\r\n            footer={[\r\n              <Button key=\"back\" onClick={modalHandleCancel}>\r\n                Отмена\r\n              </Button>,\r\n              <Button disabled={!value || !message} key=\"submit\" type=\"primary\" loading={confirmLoading} onClick={modalHandleOk}>\r\n                Создать\r\n              </Button>,\r\n            ]}\r\n          >\r\n            <Select\r\n              showSearch\r\n              value={value}\r\n              placeholder=\"Введите username или e-mail пользователя\"\r\n              style={{width: '100%'}}\r\n              defaultActiveFirstOption={false}\r\n              notFoundContent={fetching ? <Spin size=\"small\" /> : <span>{'Пользователи не найдены'}</span>}\r\n              showArrow={false}\r\n              filterOption={false}\r\n              onSearch={usersHandleSearch}\r\n              onChange={usersHandleChange}\r\n            >\r\n              {options}\r\n            </Select>\r\n            <div style={{marginTop: '15px'}}>\r\n              <Input.TextArea \r\n                value={message}\r\n                placeholder=\"Введите сообщение\" \r\n                autoSize={{ minRows: 3, maxRows: 5 }} \r\n                onChange={messageHandleChange}\r\n              />\r\n            </div>\r\n          </Modal>\r\n          <Tooltip title=\"Выйти из аккаунта\">\r\n            <Button \r\n              onClick={logout} \r\n              className=\"ant-btn--no-border\" \r\n              form=\"circle\" \r\n              icon={<LogoutOutlined style={{ fontSize: '18px'}}/>}\r\n            />\r\n          </Tooltip>\r\n        </div>\r\n      </div>\r\n      <div className = \"sidebar__dialogs\">\r\n        <DialogsContainer/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;","import React, {useState} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\nimport Sidebar from '../components/Sidebar'\r\nimport { dialogsActions, userActions, currentDialogActions } from '../redux/actions'\r\nimport { userAPI } from '../utils/api'\r\n\r\n\r\nconst SidebarContainer = ({createDialog, clearUserData, clearCurrentDialog, clearDialogs, history}) => {\r\n\r\n  const [usersSearchState, setUsersSearchState] = useState({\r\n    data: [],\r\n    fetching: false,\r\n    value: undefined,\r\n  }) \r\n  const [modalState, setModalState] = useState({\r\n    visible: false, \r\n    confirmLoading: false\r\n  })\r\n\r\n  const [message, setMessage] = useState('')\r\n\r\n  const messageHandleChange = ({target: { value }}) => {\r\n    setMessage(value)\r\n  }\r\n\r\n  const usersHandleSearch = value => {\r\n    if (value) {\r\n      setUsersSearchState({...usersSearchState, fetching: true})\r\n      userAPI.find(value).then((response) => {\r\n        if(response.status === 200){\r\n          setUsersSearchState({...usersSearchState, fetching: false, data: response.data})\r\n        }\r\n      }).catch(err => {\r\n        setUsersSearchState({...usersSearchState, fetching: false})\r\n      });\r\n    } else {\r\n      \r\n      setUsersSearchState({...usersSearchState, data: []})\r\n    }\r\n  };\r\n\r\n  const usersHandleChange = value => {\r\n    setUsersSearchState({...usersSearchState, value})\r\n  };\r\n\r\n  const showModal = () => {\r\n    setModalState({...modalState, visible: true});\r\n  };\r\n\r\n  const modalHandleOk = () => {\r\n    if(usersSearchState.value){\r\n      setModalState({...modalState, confirmLoading: true})\r\n      createDialog(usersSearchState.value, message).then(() => {\r\n        setModalState({visible: false, confirmLoading: false})\r\n        setUsersSearchState({\r\n          data: [],\r\n          fetching: false,\r\n          value: undefined,\r\n        })\r\n        setMessage('')\r\n      })  \r\n    }\r\n  };\r\n\r\n  const modalHandleCancel = () => {\r\n    setModalState({...modalState, visible: false});\r\n  };\r\n\r\n  const logout = () => {\r\n    clearUserData()\r\n    clearCurrentDialog()\r\n    clearDialogs()\r\n    history.push('/login')\r\n  }\r\n\r\n  return (\r\n    <Sidebar \r\n      showModal={showModal} \r\n      modalHandleCancel={modalHandleCancel} \r\n      modalHandleOk={modalHandleOk} \r\n      modalState={modalState} \r\n      usersHandleSearch={usersHandleSearch}\r\n      usersHandleChange={usersHandleChange} \r\n      usersSearchState={usersSearchState}\r\n      messageHandleChange={messageHandleChange}\r\n      message={message}\r\n      logout={logout}\r\n    />\r\n  );\r\n};\r\n\r\nexport default connect((state) =>  state, {...dialogsActions, ...userActions, ...currentDialogActions})(withRouter(SidebarContainer));","import React from 'react'\r\nimport './Home.scss'\r\nimport  CurrentDialogContainer  from '../../containers/CurrentDialogContainer'\r\nimport  SidebarContainer  from '../../containers/SidebarContainer'\r\n\r\nconst Home = () => {\r\n\r\n  return (\r\n    <section className = \"home\">\r\n      <div className=\"chat\">\r\n        <div className=\"chat__sidebar\">\r\n          <SidebarContainer/>\r\n        </div>\r\n        <div className=\"chat__dialog\">\r\n          <div className = \"chat__dialog-messages\">\r\n            <CurrentDialogContainer/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Home","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport Auth from './pages/Auth'\nimport Home from './pages/Home'\nimport { userActions } from './redux/actions'\n\nfunction App({me, isAuth, token, fetchUserData}) {\n\n  useEffect(() => {\n    if(token && !me)\n      fetchUserData(token)\n  }, [me])\n  \n  return (\n    <div className=\"wrapper\">\n      <Router>\n        <Switch>\n          <Route exact path='/' render={() => isAuth ? <Redirect to=\"/im\"/>  : <Redirect to=\"/login\"/>}/> \n          <Route exact path={['/login', '/register']} render={() => isAuth ?  <Redirect to=\"/im\"/> : <Auth/>}/>\n          <Route exact path='/im' render={() => isAuth ? <Home/> : <Redirect to=\"/login\"/>}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default connect(({ user: {isAuth, token, data} }) => ({isAuth, token, me: data}), userActions)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n  dialogs: [], \r\n}\r\n\r\nconst handlers = {\r\n  DIALOGS_SET_ITEMS: (state, payload) => ({...state, dialogs: payload}),\r\n  CLEAR_DIALOGS: () => (initialState),\r\n  ADD_DIALOG: (state, payload) => ({...state, dialogs: [...state.dialogs, payload]}),\r\n  UPDATE_LAST_MESSAGE: (state, {dialogId, message}) => \r\n    ({...state, \r\n      dialogs: state.dialogs.map(dialog => {\r\n        if(dialogId === dialog._id) {\r\n          dialog.lastMessage = message\r\n        }\r\n        return dialog\r\n      })\r\n    }),\r\n  UPDATE_LAST_MESSAGE_READED: (state, payload) => \r\n    ({...state, dialogs: state.dialogs.map(dialog => {\r\n        if(payload === dialog._id) {\r\n          dialog.lastMessage.isReaded = true\r\n        }\r\n        return dialog\r\n      })\r\n    }),\r\n  UPDATE_UNREADED_COUNT: (state, {dialogId, unreadedCount}) => \r\n  ({...state, dialogs: state.dialogs.map(dialog => {\r\n      if(dialogId === dialog._id) {\r\n        dialog.unreaded = unreadedCount\r\n      }\r\n      return dialog\r\n    })\r\n  }),\r\n  SET_PARTNER_STATUS: (state, {partnerId, isOnline}) => \r\n  ({...state, dialogs: state.dialogs.map(dialog => {\r\n      if(partnerId === dialog.author._id){\r\n        dialog.author.isOnline = isOnline\r\n        dialog.author.last_seen = new Date().toISOString()\r\n      }\r\n      if(partnerId === dialog.partner._id){\r\n        dialog.partner.isOnline = isOnline\r\n        dialog.partner.last_seen = new Date().toISOString()\r\n      }\r\n      return dialog\r\n    })\r\n  }),\r\n  DEFAULT: state => state\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  const handle = handlers[type] || handlers.DEFAULT\r\n  return handle(state, payload)\r\n}","const initialState = {\r\n  items: null,\r\n  loading: false,\r\n  currentDialog: null\r\n}\r\n\r\nconst handlers = {\r\n  SET_LOADING: (state, isLoading) => ({...state, loading: isLoading }),\r\n  SET_CURRENT_DIALOG: (state, payload) => ({...state, loading: false, items: payload}),\r\n  CLEAR_CURRENT_DIALOG: () => (initialState),\r\n  ADD_MESSAGE: (state, payload) => ({...state, items: [...state.items, payload]}),\r\n  SET_CURRENT_DIALOG_ID: (state, payload) => ({...state, currentDialog: payload}),\r\n  UPDATE_IS_READED: (state, {dialogId, myId}) => ({...state, items: state.items.map(message => {\r\n    if(message.dialog._id === dialogId && message.user._id === myId) {\r\n      message.isReaded = true\r\n    }\r\n    return message\r\n  })}),\r\n  DEFAULT: state => state\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  const handle = handlers[type] || handlers.DEFAULT\r\n  return handle(state, payload)\r\n}","import io from 'socket.io-client'\r\n\r\nconst initialState = {\r\n  data: null,\r\n  token: window.localStorage.token || '',\r\n  // socket: io.connect('http://localhost:3003', {\r\n  //   query: {\r\n  //     token: window.localStorage.token || ''\r\n  //   }\r\n  // }),\r\n  socket: io.connect('https://whispering-dawn-05999.herokuapp.com/', {\r\n    query: {\r\n      token: window.localStorage.token || ''\r\n    }\r\n  }),\r\n  isAuth: !!window.localStorage.token\r\n}\r\n\r\nconst handlers = {\r\n  USER_SET_DATA: (state, payload) => ({...state, data: payload}),\r\n  CLEAR_USER_DATA: () => ({data: null, token: '', socket: null, isAuth: false}),\r\n  SOCKET_CREATE_CONNECTION: (state, payload) => ({...state, socket: payload}),\r\n  SET_TOKEN: (state, payload) => ({...state, token: payload}),\r\n  SET_IS_AUTH: (state, payload) => ({...state, isAuth: payload}),\r\n  DEFAULT: state => state\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  const handle = handlers[type] || handlers.DEFAULT\r\n  return handle(state, payload)\r\n}","import { combineReducers } from 'redux'\r\nimport dialogs from './dialogs'\r\nimport currentDialog from './currentDialog'\r\nimport user from './user'\r\n\r\nexport default combineReducers({ dialogs, currentDialog, user })","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport rootReducer from './reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middleware)))\r\n\r\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.scss'\nimport 'emoji-mart/css/emoji-mart.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}