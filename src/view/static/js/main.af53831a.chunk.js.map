{"version":3,"sources":["assets/img/readed.svg","assets/img/noreaded.svg","components/Button/index.js","components/Block/index.js","utils/helpers/validateField.js","modules/LoginForm/components/LoginForm.jsx","utils/validate.js","configs.js","core/axios.js","utils/api/index.js","utils/helpers/openNotification.js","redux/actions.js","modules/LoginForm/containers/LoginForm.js","components/FormField/index.js","modules/RegistrationForm/components/RegistrationForm.jsx","modules/RegistrationForm/containers/RegistrationForm.js","pages/Auth/index.js","components/IconReaded/index.js","utils/helpers/generateGradient.js","components/Avatar/index.js","components/Message/index.js","components/MessageInput/index.js","containers/InputMessageContainer.js","components/Dialog/index.js","containers/CurrentDialogContainer.js","components/DialogItem/index.js","components/Dialogs/index.js","containers/DialogsContainer.js","components/Sidebar/index.js","containers/SidebarContainer.js","pages/Home/index.js","App.js","serviceWorker.js","redux/reducers/dialogs.js","redux/reducers/currentDialog.js","redux/reducers/user.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","Button","className","size","disabled","restProps","ClassNames","Block","children","validate","touched","errors","layout","labelCol","span","wrapperCol","LoginForm","values","handleChange","handleBlur","handleSubmit","isSubmitting","isValid","Fragment","onFinish","Item","name","help","email","onChange","onBlur","validateStatus","hasFeedback","rules","required","message","placeholder","password","Password","type","htmlType","to","isAuth","value","test","length","repeatPassword","Object","keys","forEach","key","API_URL","API_PORT","instance","axios","create","baseURL","config","dialogsListAPI","get","headers","window","localStorage","token","myId","partnerId","post","author","partner","text","messagesAPI","dialog","id","userAPI","postData","title","notification","description","dialogsActions","setDialogs","items","payload","addDialog","clearDialogs","setPartnerStatus","isOnline","updateUnreadedCount","dialogId","unreadedCount","setCurrentDialog","dispatch","getState","user","data","socket","currentDialog","dialogs","filter","_id","emit","dialog_id","partner_id","updateLastMessage","updateLastMessageReaded","createDialog","then","fetchDialogs","currentDialogActions","setMessages","clearCurrentDialog","addMessage","updateIsReaded","sendMessage","setLoading","isLoading","fetchMessages","userActions","setUserData","clearUserData","disconnect","clear","setToken","setIsAuth","socketCreateConnection","io","connect","query","fetchUserData","fetchUserLogin","status","openNotification","fetchUserRegistration","state","withRouter","history","initialValues","validateFunc","onSubmit","setSubmitting","push","catch","err","FormField","defaultValue","RegistrationForm","setTouched","onClick","Auth","exact","path","component","FormLogin","IconReaded","isReaded","src","readedSvg","noRreadedSvg","alt","hash","substr","split","map","char","number","charCodeAt","r","g","b","color","tinycolor","lighten","saturate","toHexString","lightenColor","getAvatar","avatar","Avatar","avatarSrc","firstChar","username","charAt","style","background","generateGradient","defaultProps","Message","date","isMe","audio","attachments","isTyping","useState","messageCreatedTime","setMessageCreatedTime","intervalId","useRef","useEffect","clearInterval","current","distanceInWordsToNow","Date","addSuffix","locale","ru","setInterval","classNames","fullname","item","index","url","filename","MessageInput","inputSubmitHandler","handleTyping","setValue","e","target","onKeyUp","shape","icon","SendOutlined","fontSize","me","createdAt","toISOString","Dialog","blockRef","typing","messages","partnerLastSeen","myData","useSelector","last_seen","ref","tip","renderMessagesWithCondition","loading","setPartner","isPartnerTyping","setIsPartnerTyping","setPartnerLastSeen","timeoutId","isEmpty","formatDistanceToNow","on","onMessageCreatedHandler","onMessageTyping","onMessageReadedHandler","onUserDisconnected","removeListener","scrollTo","userId","msg","clearTimeout","typingDialogId","setTimeout","DialogItem","created_at","unreaded","lastMessage","onSelect","userData","setIsMe","bind","isToday","parseISO","format","DialogItems","onSelectDialog","orderBy","image","Empty","PRESENTED_IMAGE_SIMPLE","imageStyle","height","Dialogs","onSearch","inputValue","Search","toLowerCase","currentDialogId","filtered","setFiltered","onDialogCreated","onUserConnected","setPartnerTyping","console","log","indexOf","Sidebar","modalHandleOk","showModal","modalHandleCancel","modalState","usersHandleChange","usersHandleSearch","usersSearchState","messageHandleChange","logout","visible","confirmLoading","fetching","options","d","Option","TeamOutlined","form","FormOutlined","onCancel","footer","showSearch","width","defaultActiveFirstOption","notFoundContent","showArrow","filterOption","marginTop","TextArea","autoSize","minRows","maxRows","LogoutOutlined","undefined","setUsersSearchState","setModalState","setMessage","response","Home","render","Boolean","location","hostname","match","initialState","handlers","DIALOGS_SET_ITEMS","CLEAR_DIALOGS","ADD_DIALOG","UPDATE_LAST_MESSAGE","UPDATE_LAST_MESSAGE_READED","UPDATE_UNREADED_COUNT","SET_PARTNER_STATUS","DEFAULT","SET_LOADING","SET_CURRENT_DIALOG","CLEAR_CURRENT_DIALOG","ADD_MESSAGE","SET_CURRENT_DIALOG_ID","UPDATE_IS_READED","USER_SET_DATA","CLEAR_USER_DATA","SOCKET_CREATE_CONNECTION","SET_TOKEN","SET_IS_AUTH","combineReducers","handle","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","rootReducer","applyMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.af53831a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/readed.c1f419d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/noreaded.3c841bf6.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button as BaseButton } from 'antd'\r\nimport './Button.scss'\r\nimport ClassNames from 'classnames'\r\n\r\nconst Button = ({className, size, disabled, ...restProps}) => (\r\n   <BaseButton \r\n    disabled={disabled} \r\n    className={ClassNames(\"button\", className, {\"button--large\": size === \"large\"})} {...restProps}/>\r\n)\r\n\r\nButton.propTypes = {\r\n  className: PropTypes.string,\r\n  size: PropTypes.string,\r\n  disabled: PropTypes.bool\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport './Block.scss'\r\nimport PropTypes from 'prop-types'\r\nimport ClassNames from 'classnames'\r\n\r\nconst Block = ({ children, className }) => \r\n(\r\n  <div className={ClassNames('block', className)}> {children} </div>\r\n)\r\n\r\nBlock.propTypes = {\r\n  className: PropTypes.string,\r\n  children: PropTypes.element.isRequired\r\n}\r\n\r\nexport default Block","const validate = (touched, errors) => touched ? errors && touched ? 'error' : 'success' : ''\r\n\r\nexport default validate","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Form, Input } from 'antd'\r\nimport Button from '../../../components/Button'\r\nimport Block from '../../../components/Block'\r\nimport validate from '../../../utils/helpers/validateField'\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 0,\r\n  },\r\n  wrapperCol: {\r\n    span: 25,\r\n  },\r\n};\r\n\r\nconst LoginForm = ({\r\n  values,\r\n  errors,\r\n  touched,\r\n  handleChange,\r\n  handleBlur,\r\n  handleSubmit,\r\n  isSubmitting,\r\n  isValid\r\n  }) => {\r\n\r\n  const onFinish = () => {\r\n    \r\n    handleSubmit()\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className = \"auth__top\">\r\n        <h2>Войти в аккаунт</h2>\r\n        <p>Пожалуйста, войдите в свой аккаунт</p>\r\n      </div>\r\n      <Block>   \r\n        <Form {...layout} onFinish={onFinish}>\r\n          <Form.Item \r\n            name=\"email\"  \r\n            help={touched.email && errors.email}\r\n            onChange = {handleChange} \r\n            onBlur = {handleBlur}  \r\n            validateStatus={validate(touched.email, errors.email)}\r\n            hasFeedback \r\n            rules={[{required: true,message: 'Please input your E-Mail'}]}>\r\n            <Input size=\"large\" placeholder=\"E-Mail\"/>\r\n          </Form.Item>\r\n          <Form.Item \r\n            name=\"password\" \r\n            help={touched.password && errors.password}\r\n            onChange = {handleChange} \r\n            onBlur = {handleBlur} \r\n            validateStatus={validate(touched.password, errors.password)}\r\n            hasFeedback \r\n            rules={[{required: true,message: 'Please input your password'}]}>\r\n            <Input.Password size=\"large\" placeholder=\"Password\"/>\r\n          </Form.Item>\r\n          <Form.Item>\r\n          {isSubmitting && !isValid && <span>Ошибка!</span>}\r\n          <Button \r\n            disabled={isSubmitting} \r\n            size=\"large\" \r\n            type=\"primary\" \r\n            htmlType=\"submit\"\r\n          >\r\n            Войти в аккаунт\r\n          </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        <Link className=\"auth__register-link\" to=\"/register\">Зарегистрироваться</Link>\r\n      </Block>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default LoginForm","const validate = ({ isAuth, values, errors }) => {\r\n  const rules = {\r\n    email: value => {\r\n      if (!value) {\r\n        errors.email = 'Введите E-Mail';\r\n      } else if (\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(value)\r\n      ) {\r\n        errors.email = 'Неверный E-Mail';\r\n      }\r\n    },\r\n    name: value =>{\r\n      if (!value) {\r\n        errors.name = 'Введите ваше имя';\r\n      }\r\n      else if(value.length < 2) {\r\n        errors.name = 'Имя должно собержать не менее двух символов';\r\n      }\r\n    },\r\n    password: value => {\r\n      if (!value){\r\n        errors.password = \"Введите пароль\"\r\n      } else if (!isAuth && !/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/i.test(value))\r\n        errors.password = \"Слишком легкий пароль\"\r\n    },\r\n    repeatPassword: value =>{\r\n      if (!value) {\r\n        errors.repeatPassword = 'Повторите пароль';\r\n      } else if (value !== values.password){\r\n        errors.repeatPassword = 'Пароли не совпадают';\r\n      }\r\n    },\r\n  }\r\n  Object.keys(values).forEach(key => \r\n    rules[key] && rules[key](values[key])\r\n  )\r\n}\r\n\r\nexport default validate","export default {\r\n  development: {\r\n    API_URL: 'http://localhost',\r\n    API_PORT: '3003'\r\n  },\r\n  build: {\r\n    API_URL: 'https://whispering-dawn-05999.herokuapp.com/'\r\n  }\r\n}","import axios from 'axios'\r\nimport config from '../configs'\r\n\r\nconst instance = axios.create({\r\n  baseURL: `${config.development.API_URL}:${config.development.API_PORT}`\r\n});\r\n\r\nexport default instance","import axios from '../../core/axios'\r\n\r\nexport const dialogsListAPI = {\r\n  getAllDialogs: () => axios.get('/dialogs', {\r\n    headers: {\r\n      'token': window.localStorage.token \r\n    }\r\n  }),\r\n  createDialog: (myId, partnerId, message) => axios.post('/dialogs', {\r\n    author: myId,\r\n    partner: partnerId,\r\n    text: message, \r\n  },\r\n  {\r\n    headers: {\r\n      'token': window.localStorage.token \r\n    }\r\n  })\r\n}\r\n\r\nexport const messagesAPI = {\r\n  sendMessage: (text, dialog) => axios.post('/messages/', {\r\n    text,\r\n    dialog\r\n  },\r\n  {\r\n    headers: {\r\n      'token': window.localStorage.token \r\n    }\r\n  }),\r\n  getAllByDialogId: id => axios.get(`/messages/${id}`)\r\n}\r\n\r\nexport const userAPI = {\r\n  login: postData => axios.post('/user/login', postData),\r\n  find: value => axios.get(`/user/find?query=${value}`, {\r\n    headers: {\r\n      'token': window.localStorage.token \r\n    }\r\n  }),\r\n  getMe: token => axios.get('/user/me', {\r\n    headers: {\r\n      'token': token \r\n    }\r\n  }),\r\n  register: postData => axios.post('/user/registration', postData),\r\n}","import { notification } from 'antd'\r\n\r\nexport default ({text, title, type = 'info'}) => notification[type]({\r\n  message: title,\r\n  description: text\r\n})","import { dialogsListAPI, messagesAPI, userAPI } from '../utils/api'\r\nimport openNotification from '../utils/helpers/openNotification'\r\nimport io from 'socket.io-client'\r\nimport config from '../configs'\r\n\r\nexport const dialogsActions = {\r\n  setDialogs: items => ({\r\n    type: 'DIALOGS_SET_ITEMS',\r\n    payload: items\r\n  }),\r\n  addDialog: dialog => ({\r\n    type: 'ADD_DIALOG',\r\n    payload: dialog\r\n  }),\r\n  clearDialogs: () => ({\r\n    type: 'CLEAR_DIALOGS'\r\n  }),\r\n  setPartnerStatus: (partnerId, isOnline) => ({\r\n    type: 'SET_PARTNER_STATUS',\r\n    payload: {\r\n      partnerId, \r\n      isOnline\r\n    }\r\n  }),\r\n  updateUnreadedCount: (dialogId, unreadedCount) => ({\r\n    type: 'UPDATE_UNREADED_COUNT',\r\n    payload: {\r\n      dialogId, \r\n      unreadedCount\r\n    }\r\n  }),\r\n  setCurrentDialog: id => (dispatch, getState) => {\r\n    const {user: {data, socket}, dialogs: {dialogs}} = getState()\r\n    const currentDialog = dialogs.filter(dialog => dialog._id === id)[0]\r\n    const partnerId = data._id === currentDialog.author._id ? currentDialog.partner._id : currentDialog.author._id\r\n    socket.emit('DIALOG_ENTERED', {dialog_id: id, partner_id: partnerId})\r\n    dispatch(dialogsActions.updateUnreadedCount(currentDialog._id, 0))\r\n    dispatch({\r\n      type: 'SET_CURRENT_DIALOG_ID',\r\n      payload: id\r\n    })\r\n  },\r\n  updateLastMessage: (dialogId, message) => ({\r\n    type: 'UPDATE_LAST_MESSAGE',\r\n    payload: {\r\n      dialogId, \r\n      message\r\n    }\r\n  }),\r\n  updateLastMessageReaded: dialogId => ({\r\n    type: 'UPDATE_LAST_MESSAGE_READED',\r\n    payload: dialogId\r\n  }),\r\n  createDialog: (partnerId, message) => (dispatch, getState) => {\r\n    const {user: {data}} = getState()\r\n    return dialogsListAPI.createDialog(data._id, partnerId, message).then(({data}) => {\r\n      dispatch(dialogsActions.addDialog(data))\r\n    })\r\n  },\r\n  fetchDialogs: () => dispatch => {\r\n    return dialogsListAPI.getAllDialogs().then(({data}) => {\r\n      if(data.length)\r\n        dispatch(dialogsActions.setDialogs(data))\r\n    })\r\n  }\r\n}\r\n \r\nexport const currentDialogActions = {\r\n  setMessages: items => ({\r\n    type: 'SET_CURRENT_DIALOG',\r\n    payload: items\r\n  }),\r\n  clearCurrentDialog: () => ({\r\n    type: 'CLEAR_CURRENT_DIALOG'\r\n  }),\r\n  addMessage: message => ({\r\n    type: 'ADD_MESSAGE',\r\n    payload: message\r\n  }),\r\n  updateIsReaded: (dialogId, partnerId) => (dispatch, getState) => {\r\n    const {user: {data}} = getState()\r\n    dispatch({\r\n      type: 'UPDATE_IS_READED',\r\n      payload: {dialogId, myId: data._id}\r\n    })\r\n  },\r\n  sendMessage: text => (dispatch, getState) => {\r\n    const {currentDialog: {currentDialog}} = getState()\r\n    messagesAPI.sendMessage(text, currentDialog)\r\n  },\r\n  setLoading: (isLoading) => ({\r\n    type: 'SET_LOADING',\r\n    payload: isLoading\r\n  }),\r\n  fetchMessages: dialogId => dispatch => {\r\n    dispatch(currentDialogActions.setLoading(true))\r\n    messagesAPI.getAllByDialogId(dialogId).then(({data}) => {\r\n      dispatch(currentDialogActions.setMessages(data || null))\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const userActions = {\r\n  setUserData: data => ({\r\n    type: 'USER_SET_DATA',\r\n    payload: data\r\n  }),\r\n  clearUserData: () => (dispatch, getState) => {\r\n    const {user: {socket}} = getState()\r\n    socket.disconnect()\r\n    window.localStorage.clear()\r\n    dispatch({\r\n      type: 'CLEAR_USER_DATA'\r\n    })\r\n  },\r\n  setToken: token => ({\r\n    type: 'SET_TOKEN',\r\n    payload: token\r\n  }),\r\n  setIsAuth: isAuth => ({\r\n    type: 'SET_IS_AUTH',\r\n    payload: isAuth\r\n  }),\r\n  socketCreateConnection: token => ({\r\n    type: 'SOCKET_CREATE_CONNECTION',\r\n    payload: io.connect(`${config.development.API_URL}:${config.development.API_PORT}`, {\r\n      query: {\r\n        token\r\n      }\r\n    })\r\n  }),\r\n  fetchUserData: token => dispatch => {\r\n    userAPI.getMe(token).then(({ data }) => {\r\n      dispatch(userActions.setUserData(data))\r\n    })\r\n  },\r\n  fetchUserLogin:  postData =>  (dispatch, getState) => {\r\n    return userAPI.login(postData).then(({ data }) => {\r\n        const {status, token} = data\r\n        if(status === 'error'){\r\n          openNotification({text: 'Неверный логин или пароль', title: 'Ошибка при авторизации', type: 'error'})\r\n        }\r\n        else{\r\n          openNotification({title: 'Отлично!', text: 'Авторизация успешна', type: 'success'})\r\n          window.localStorage.token = token\r\n          const {user: {socket}} = getState()\r\n          dispatch(userActions.socketCreateConnection(token))\r\n          dispatch(userActions.setToken(token))\r\n          dispatch(userActions.setIsAuth(true))\r\n          dispatch(userActions.fetchUserData(token))\r\n        }\r\n        return status\r\n      })\r\n  },\r\n  fetchUserRegistration: postData =>  (dispatch, getState)=> {\r\n    return userAPI.register(postData).then(({ data }) => {\r\n        const {status, token} = data\r\n        if(status === 'error'){\r\n          openNotification({text: 'Ошибка при регистрации', title: 'Упс', type: 'error'})\r\n        }\r\n        else{\r\n          openNotification({title: 'Отлично!', text: 'Регистрация прошла успешно', type: 'success'})\r\n          window.localStorage.token = token\r\n          const {user: {socket}} = getState()\r\n          socket.disconnect()\r\n          dispatch(userActions.socketCreateConnection(token))\r\n          dispatch(userActions.setToken(token))\r\n          dispatch(userActions.setIsAuth(true))\r\n          dispatch(userActions.fetchUserData(token))\r\n        }\r\n        return status\r\n      })\r\n  }\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport LoginForm from '../components/LoginForm.jsx'\r\nimport { Formik } from 'formik';\r\nimport validateFunc from '../../../utils/validate'\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { userActions } from '../../../redux/actions'\r\n\r\nconst FormikLogin = ({fetchUserLogin, history}) => (\r\n  <div>\r\n    <Formik\r\n      initialValues={{ email: '', password: '' }}\r\n      validate = {values => {\r\n        const errors = {}\r\n        validateFunc({ isAuth: true, values, errors  })\r\n        return errors\r\n      }}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setSubmitting(true)\r\n        fetchUserLogin(values).then(status => {\r\n          \r\n          if(status === 'success'){\r\n            history.push('/')\r\n          }\r\n          else{\r\n            setSubmitting(false)\r\n          }\r\n          \r\n        }).catch(err => {\r\n          setSubmitting(false)\r\n        })\r\n      }}\r\n    >\r\n      {LoginForm}\r\n    </Formik>\r\n  </div>\r\n);\r\n\r\nexport default connect(state => state, userActions)(withRouter(FormikLogin))","import React from 'react';\r\nimport { Form, Input } from 'antd'\r\nimport validate from '../../utils/helpers/validateField'\r\n\r\nconst FormField = ({\r\n  name,\r\n  placeholder,\r\n  type,\r\n  handleChange,\r\n  handleBlur,\r\n  touched,\r\n  errors,\r\n  defaultValue\r\n}) => {\r\n  return (\r\n    <Form.Item \r\n      help={touched[name] && errors[name]} \r\n      name={name}\r\n      onChange={handleChange} \r\n      onBlur={handleBlur}\r\n      validateStatus={validate(touched[name], errors[name])} \r\n      hasFeedback \r\n      defaultValue = {defaultValue}\r\n      >\r\n        {type === \"password\" ? <Input.Password size=\"large\" placeholder={placeholder}/> : <Input size=\"large\" placeholder={placeholder}/>}\r\n    </Form.Item>\r\n  );\r\n};\r\n\r\nexport default FormField;","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Form } from 'antd'\r\nimport Button from '../../../components/Button'\r\nimport FormField from '../../../components/FormField'\r\nimport Block from '../../../components/Block'\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 0,\r\n  },\r\n  wrapperCol: {\r\n    span: 25,\r\n  }\r\n};\r\n\r\nconst RegistrationForm = ({\r\n  values,\r\n  errors,\r\n  touched,\r\n  handleChange,\r\n  handleBlur,\r\n  handleSubmit,\r\n  setTouched\r\n}) => {\r\n  const onFinish = () => {\r\n    handleSubmit()\r\n  }\r\n  return (\r\n    \r\n    <React.Fragment>\r\n    <div className = \"auth__top\">\r\n      <h2>Зарегистрируйтесь</h2>\r\n      <p>Для входа в чат, нужно зарегистрироваться</p>\r\n    </div>\r\n    <Block>   \r\n      <Form {...layout} onFinish={onFinish}>\r\n        <FormField \r\n          name=\"email\" \r\n          placeholder=\"E-mail\" \r\n          touched={touched} \r\n          errors={errors} \r\n          handleChange={handleChange} \r\n          handleBlur={handleBlur} \r\n          defaultValue={values.email}\r\n        />\r\n        <FormField \r\n          name=\"name\" \r\n          placeholder=\"Ваше имя\"\r\n          touched={touched} \r\n          errors={errors} \r\n          handleChange={handleChange} \r\n          handleBlur={handleBlur} \r\n          defaultValue={values.name}\r\n        />\r\n        <FormField \r\n          type=\"password\" \r\n          name=\"password\" \r\n          placeholder=\"Пароль\" \r\n          touched={touched} \r\n          errors={errors} \r\n          handleChange={handleChange} \r\n          handleBlur={handleBlur} \r\n          defaultValue={values.password}\r\n        />\r\n        <FormField \r\n          type=\"password\" \r\n          name=\"repeatPassword\" \r\n          placeholder=\"Повторите пароль\" \r\n          touched={touched} \r\n          errors={errors} \r\n          handleChange={handleChange} \r\n          handleBlur={handleBlur} \r\n          defaultValue={values.repeatPassword}\r\n        />\r\n        <Form.Item>\r\n        <Button onClick = {() => {\r\n          setTouched({email: true, name: true, password: true, repeatPassword: true})\r\n        }} size=\"large\" type=\"primary\" htmlType=\"submit\">Зарегистрироваться</Button>\r\n        </Form.Item>\r\n      </Form>\r\n      <Link className=\"auth__register-link\" to=\"/login\">Войти в аккаунт</Link>\r\n    </Block>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default RegistrationForm","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport RegistrationForm from '../components/RegistrationForm.jsx'\r\nimport { Formik } from 'formik';\r\nimport validateFunc from '../../../utils/validate'\r\nimport { userActions } from '../../../redux/actions'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nconst FormikRegistration = ({fetchUserRegistration, history}) => (\r\n  <div>\r\n    <Formik\r\n      initialValues={{ email: '', name:'', password: '', repeatPassword: '' }}\r\n      \r\n      validate = {values => {\r\n        const errors = {}\r\n        validateFunc({ isAuth: false, values, errors })\r\n        return errors\r\n      }}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        fetchUserRegistration(values).then(status => {\r\n          \r\n          if(status === 'success'){\r\n            history.push('/')\r\n          }\r\n          else{\r\n            setSubmitting(false)\r\n          }\r\n          \r\n        }).catch(err => {\r\n          setSubmitting(false)\r\n        })\r\n      }}\r\n    >\r\n      {RegistrationForm}\r\n    </Formik>\r\n  </div>\r\n);\r\n\r\nexport default connect(state => state, userActions)(withRouter(FormikRegistration))","import React from 'react'\r\nimport './Auth.scss'\r\nimport { FormLogin, RegistrationForm } from '../../modules'\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\n\r\nconst Auth = () => \r\n  (\r\n    <div className = \"auth\">\r\n      <div className = \"auth__wrapper\">\r\n        <Switch>\r\n          <Route exact path={['/', '/login']} component={FormLogin}/>\r\n          <Route exact path='/register' component={RegistrationForm}/>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\nexport default Auth","import React from 'react'\r\nimport readedSvg from '../../assets/img/readed.svg'\r\nimport noRreadedSvg from '../../assets/img/noreaded.svg'\r\n\r\nconst IconReaded = ({ isReaded, className }) =>(\r\n  <div className = {className}>\r\n    <img src={isReaded ? readedSvg : noRreadedSvg} alt=\"\"/>\r\n  </div>\r\n)\r\n\r\nexport default IconReaded","import tinycolor from 'tinycolor2'\r\n\r\nconst getCorrectIndex = number => {\r\n  if(number > 255) return number % 255\r\n  if(number < 0) return -number % 255\r\n  return number\r\n}\r\n\r\nexport default hash => {\r\n  const [r, g, b] = hash.substr(-3, 3).split('').map(char => getCorrectIndex(char.charCodeAt()))\r\n  return {\r\n    color: tinycolor({r, g , b}).lighten(10).saturate(20).toHexString(), \r\n    lightenColor: tinycolor({r, g , b}).saturate(20).lighten(30).toHexString()\r\n  }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport generateGradient from '../../utils/helpers/generateGradient'\r\nimport './Avatar.scss'\r\n\r\nconst getAvatar = avatar => {\r\n  if(avatar){\r\n    return avatar\r\n  }\r\n  else{\r\n\r\n  }\r\n}\r\n\r\nconst Avatar = ({avatarSrc, hash, username}) => {\r\n  const firstChar = username.charAt(0)\r\n  return (\r\n  <div className = \"avatar\">\r\n    {avatarSrc  \r\n      ? <img src={getAvatar(avatarSrc)} alt={`User avatar`}/>\r\n      : <div \r\n        className=\"avatar__gradient\" \r\n        style={\r\n          {\r\n            background: `linear-gradient(\r\n              115deg, \r\n              ${generateGradient(hash).color}, \r\n              ${generateGradient(hash).lightenColor}\r\n            )`\r\n          }\r\n        }\r\n        >\r\n          <span>{firstChar}</span>\r\n        </div>\r\n    }\r\n  </div>\r\n)}\r\n\r\nAvatar.defaultProps = {\r\n  username: 'none'\r\n}\r\n\r\nAvatar.propTypes = {\r\n  avatarSrc: PropTypes.string,\r\n  hash: PropTypes.string,\r\n  username: PropTypes.string\r\n}\r\n\r\nexport default Avatar","import React, {useState, useRef, useEffect} from 'react'\r\nimport distanceInWordsToNow from 'date-fns/formatDistanceToNow'\r\nimport classNames from 'classnames'\r\nimport { ru } from 'date-fns/locale'\r\nimport PropTypes from 'prop-types'\r\nimport './Message.scss'\r\nimport IconReaded from '../IconReaded'\r\nimport Avatar from '../Avatar'\r\n\r\nconst Message = (\r\n  {\r\n    avatar, \r\n    text, \r\n    date, \r\n    user, \r\n    isMe, \r\n    isReaded, \r\n    audio, \r\n    attachments, \r\n    isTyping\r\n  }) => {\r\n  const [messageCreatedTime, setMessageCreatedTime] = useState()\r\n  const intervalId = useRef(null)\r\n\r\n  useEffect(() => {\r\n    clearInterval(intervalId.current)\r\n    if(date){\r\n      setMessageCreatedTime(distanceInWordsToNow(new Date(date), { addSuffix: true, locale: ru }))\r\n      intervalId.current = setInterval(() => {\r\n        setMessageCreatedTime(distanceInWordsToNow(new Date(date), { addSuffix: true, locale: ru }))\r\n      }, 60000)\r\n    }\r\n    return () => {\r\n      clearInterval(intervalId.current)\r\n    }\r\n  }, [date])\r\n\r\n  if(!(audio || text || isTyping || attachments.length))\r\n    return <div></div>\r\n  return (\r\n   <div className = {classNames('message', \r\n    {\r\n      'message--isme': isMe, \r\n      'message--is-typing': isTyping, \r\n      'message--image': attachments && attachments.length === 1,\r\n      'message--audio': audio\r\n    })}>\r\n     <div className = \"message__wrap\">\r\n      <div className=\"message__avatar\">\r\n        <Avatar avatarSrc={avatar} hash={user._id} username={user.fullname}/>\r\n      </div>\r\n      <div>\r\n        <div className=\"message__content\">\r\n          {(audio || text || isTyping) && \r\n            <div className=\"message__bubble\">\r\n              <div className = \"message__typing\">\r\n                <span></span>\r\n                <span></span>\r\n                <span></span>\r\n              </div>\r\n              { text && <p className=\"message__text\">{text}</p>}\r\n            </div>}\r\n          {attachments.length \r\n            ? <div className = \"message__attachments\">\r\n                {attachments.map((item, index) => (\r\n                  <div key = {index} className = \"message__attachments-item\">\r\n                    <img src={item.url} alt={item.filename}/>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            : ''\r\n          }\r\n        </div>\r\n        {!isTyping && <span className=\"message__date\">{messageCreatedTime}</span>}\r\n      </div>\r\n        {isMe ? <IconReaded className=\"message__readed-icon\" isReaded={isReaded}/> : ''}\r\n     </div>\r\n     \r\n   </div>\r\n)}\r\n\r\nMessage.defaultProps = {\r\n  user: {},\r\n  attachments: []\r\n}\r\n\r\nMessage.propTypes = {\r\n  avatar: PropTypes.string,\r\n  text: PropTypes.string,\r\n  date: PropTypes.string,\r\n  user: PropTypes.object,\r\n  attachments: PropTypes.array,\r\n  isTyping: PropTypes.bool\r\n}\r\n\r\nexport default Message","import React, {useState} from 'react'\r\nimport './MessageInput.scss'\r\nimport {SendOutlined} from '@ant-design/icons'\r\nimport { Button, Input } from 'antd'\r\n\r\nfunction MessageInput({ inputSubmitHandler, handleTyping }) {\r\n\r\n  const [value, setValue] = useState()\r\n  return (\r\n    <div className = \"message-input\">\r\n      <div className=\"message-input__textarea\">\r\n        <Input \r\n          onChange={e => { setValue(e.target.value)} } \r\n          onKeyUp = {(e) => {\r\n            if(e.key === \"Enter\" && e.target.value){\r\n              inputSubmitHandler(value)\r\n              setValue('')\r\n            }\r\n            else\r\n              handleTyping()\r\n          }}\r\n          placeholder=\"Введите текст сообщения...\" \r\n          size = \"large\"\r\n          value = {value}/>\r\n      </div>\r\n      <div className=\"message-input__actions\">\r\n        <Button onClick = {() => {\r\n            if(value){\r\n              inputSubmitHandler(value)\r\n              setValue('')\r\n            }\r\n          }} \r\n          className=\"ant-btn--no-border\" \r\n          shape=\"circle\" \r\n          icon={<SendOutlined  \r\n          style = {{fontSize: '20px'}}/>} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageInput;","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport InputMessage from '../components/MessageInput'\r\nimport { currentDialogActions } from '../redux/actions'\r\n\r\n\r\n\r\nconst InputMessageContainer = ({me, dialogId, socket, sendMessage, addMessage }) => {\r\n  \r\n  const handleTyping = () => {\r\n    socket.emit('MESSAGE_TYPING', {user: me, dialogId})\r\n  }\r\n  const inputSubmitHandler = (value) => {\r\n    if(dialogId){\r\n      addMessage(\r\n        {\r\n          text: value, \r\n          isReaded: false, \r\n          user: me, \r\n          createdAt: new Date().toISOString(), \r\n          dialog: {_id: dialogId}\r\n        }\r\n      )\r\n      sendMessage(value)\r\n    }\r\n  }\r\n    \r\n  return (\r\n    <InputMessage inputSubmitHandler = {inputSubmitHandler} handleTyping={handleTyping}/>\r\n  );\r\n};\r\n\r\nexport default connect(({user, currentDialog}) =>  (\r\n  {\r\n    me: user.data, \r\n    socket: user.socket, \r\n    dialogId: currentDialog.currentDialog\r\n  }),  currentDialogActions)(InputMessageContainer);","import React from 'react';\r\nimport propTypes from 'prop-types'\r\nimport { useSelector } from 'react-redux'\r\nimport  Message  from '../Message'\r\nimport  MessageInputContainer  from '../../containers/InputMessageContainer'\r\nimport { Empty } from 'antd'\r\nimport './Dialog.scss'\r\nimport { Spin } from 'antd';\r\nimport classNames from 'classnames'\r\n\r\n\r\nconst renderMessagesWithCondition = (isLoading, messages, myData) => {\r\n  if(isLoading || !myData){\r\n    return <Spin tip=\"Загрузка сообщений...\" size=\"large\"/>\r\n  }\r\n  else if (!messages){\r\n    return <Empty description=\"Откройте диалог\"/> \r\n  }\r\n  else if(messages.length === 0){\r\n    return <Empty description=\"Диалог пуст\"/> \r\n  }\r\n  return messages.map( (message, index) => \r\n    (\r\n      <Message\r\n        key={index}\r\n        avatar = {message.user.avatar} \r\n        text={message.text} \r\n        date={message.createdAt} \r\n        attachments = {message.attachments}\r\n        user={message.user}\r\n        isMe = {message.user._id === myData._id}\r\n        isReaded = {message.isReaded}\r\n      />\r\n    )\r\n  )\r\n}\r\n\r\nconst Dialog = (\r\n  {\r\n    blockRef, \r\n    isLoading, \r\n    typing, \r\n    messages, \r\n    partnerLastSeen, \r\n    partner \r\n  }) => {\r\n  const myData = useSelector(({user: {data}}) => data)\r\n  return (\r\n    <div className = \"dialog\">\r\n      <div className=\"dialog__header\">\r\n        <div className=\"dialog__header-center\">\r\n          <b className=\"dialog__header-username\">{partner.fullname}</b>\r\n          <div className=\"dialog__header-status\">\r\n            {partner.last_seen && <div className = {classNames(\"status\", {\"status--online\": partner.isOnline})}>{ partner.isOnline ? 'онлайн' : `был(а) в сети ${partnerLastSeen}`}</div>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div ref={blockRef} className = \"dialog__messages\">\r\n        {renderMessagesWithCondition(isLoading, messages, myData)}\r\n        {messages && <Message isTyping={typing} user={partner} avatar={partner.avatar} isMe={false}/> }\r\n      </div>\r\n      <div className=\"dialog__input\">\r\n        <MessageInputContainer />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nDialog.defaultProps = {\r\n  messages: [],\r\n  partnerLastSeen: 'меньше минуты назад'\r\n}\r\n\r\n\r\nDialog.propTypes = {\r\n  blockRef: propTypes.oneOfType([\r\n    propTypes.func, \r\n    propTypes.shape({ current: propTypes.instanceOf(Element) })\r\n  ]),\r\n  isLoading: propTypes.bool, \r\n  typing: propTypes.bool, \r\n  messages: propTypes.array, \r\n  partnerLastSeen: propTypes.string, \r\n  partner: propTypes.object\r\n}\r\n\r\nexport default Dialog;","import React, {useState, useEffect, useRef} from 'react';\r\nimport { connect } from 'react-redux'\r\nimport isEmpty from 'lodash/isEmpty'\r\nimport { formatDistanceToNow } from 'date-fns'\r\nimport { ru } from 'date-fns/locale'\r\nimport Dialog from '../components/Dialog'\r\nimport { currentDialogActions, dialogsActions } from '../redux/actions'\r\n\r\nconst CurrentDialogContainer = (\r\n  {\r\n    me, \r\n    isLoading, \r\n    socket, \r\n    dialogId, \r\n    dialogs, \r\n    messages, \r\n    fetchMessages, \r\n    addMessage, \r\n    updateIsReaded, \r\n  }) => {\r\n\r\n  const [partner, setPartner] = useState({})\r\n  const [isPartnerTyping, setIsPartnerTyping] = useState(false)\r\n  const [partnerLastSeen, setPartnerLastSeen] = useState()\r\n  const ref = useRef(null)\r\n  const intervalId = useRef(null)\r\n  const timeoutId = useRef(null)\r\n\r\n  useEffect(() => {\r\n    if(me && dialogs && dialogId){\r\n      const {author, partner} = dialogs.filter(dialog => dialog._id === dialogId)[0]\r\n      setPartner(author._id === me._id ? partner : author)\r\n    }\r\n  }, [dialogs, dialogId, me])\r\n\r\n  useEffect(() => {\r\n    clearInterval(intervalId.current)\r\n    if(!isEmpty(partner) && !partner.isOnline){\r\n      setPartnerLastSeen(formatDistanceToNow(\r\n          new Date(partner.last_seen), \r\n          { addSuffix: true, locale: ru }\r\n        )\r\n      )\r\n      intervalId.current = setInterval(() => {\r\n        setPartnerLastSeen(formatDistanceToNow(\r\n            new Date(partner.last_seen), \r\n            { addSuffix: true, locale: ru }\r\n          )\r\n        )\r\n      }, 60000)\r\n    }\r\n    return () => {\r\n      clearInterval(intervalId.current)\r\n    }\r\n  }, [dialogs, partner])\r\n\r\n  useEffect(() => {\r\n    if(dialogId)\r\n      fetchMessages(dialogId)\r\n    socket.on('SERVER:MESSAGE_CREATED', onMessageCreatedHandler)\r\n    socket.on('MESSAGE_TYPING', onMessageTyping)\r\n    socket.on('SERVER:MESSAGES_READED', onMessageReadedHandler)\r\n    socket.on('USER_DISCONNECTED', onUserDisconnected)\r\n    return () => {    \r\n      socket.removeListener('SERVER:MESSAGE_CREATED', onMessageCreatedHandler)\r\n      socket.removeListener('USER_DISCONNECTED', onUserDisconnected)\r\n      socket.removeListener('MESSAGE_TYPING', onMessageTyping)\r\n      socket.removeListener('SERVER:MESSAGE_READED', onMessageReadedHandler)\r\n    }\r\n  }, [dialogId, partner, me])\r\n\r\n  useEffect(() => {\r\n    if(ref.current)\r\n      ref.current.scrollTo(0, 9999999)\r\n  }, [messages])\r\n\r\n  const onUserDisconnected = userId => {\r\n    if(dialogId && userId === partner._id)\r\n      setPartnerLastSeen(formatDistanceToNow(\r\n          new Date(partner.last_seen), \r\n          { addSuffix: true, locale: ru } \r\n        )\r\n      )\r\n  }\r\n  \r\n  const onMessageReadedHandler = ({dialog_id, partner_id}) => {\r\n    if(me && dialogId === dialog_id && partner_id === me._id){\r\n      updateIsReaded(dialog_id)\r\n    }\r\n  }\r\n\r\n  const onMessageCreatedHandler = msg => {\r\n    if(dialogId && me && dialogId === msg.dialog._id){\r\n      if( me && msg.user._id !== me._id) {\r\n        setIsPartnerTyping(false)\r\n        clearTimeout(timeoutId.current)\r\n        addMessage(msg)\r\n        let {author, partner} = dialogs.filter(dialog => dialog._id === dialogId)[0]\r\n        partner = author._id === me._id ? partner : author\r\n        socket.emit('DIALOG_ENTERED', {dialog_id: dialogId, partner_id: partner._id})\r\n      }   \r\n    }\r\n  }\r\n\r\n  const onMessageTyping = (({user, dialogId: typingDialogId}) => {\r\n    if(me._id !== user._id && dialogId === typingDialogId && !isPartnerTyping){\r\n      clearTimeout(timeoutId.current)\r\n      setIsPartnerTyping(true)\r\n      if(ref.current)\r\n        ref.current.scrollTo(0, 9999999)\r\n      timeoutId.current = setTimeout(() => {setIsPartnerTyping(false)}, 2000)\r\n    }\r\n  })\r\n  \r\n  return (\r\n    <Dialog partner={partner} blockRef = {ref} typing={isPartnerTyping} partnerLastSeen={partnerLastSeen} isLoading = {isLoading} messages={messages}/>\r\n  );\r\n};\r\n\r\nexport default connect(({ currentDialog, dialogs, user }) =>  {\r\n  return { me: user.data, socket: user.socket, dialogId: currentDialog.currentDialog, dialogs: dialogs.dialogs, messages: currentDialog.items, isLoading: currentDialog.loading}\r\n},  {...currentDialogActions, ...dialogsActions})(CurrentDialogContainer);","import React, {useState, useEffect} from 'react'\r\nimport propTypes from 'prop-types'\r\nimport { useSelector } from 'react-redux'\r\nimport classNames from 'classnames'\r\nimport { format, isToday, parseISO } from 'date-fns'\r\nimport IconReaded from '../IconReaded'\r\nimport \"./DialogItem.scss\"\r\nimport Avatar from '../Avatar'\r\n\r\nconst getMessageTime = created_at => {\r\n  if(isToday(parseISO(created_at))){\r\n    return format(new Date(created_at), 'kk:mm')\r\n  }\r\n  return format(new Date(created_at), 'd.MM.yy')\r\n}\r\n\r\n const DialogItem = (\r\n  { \r\n    id, \r\n    partner, \r\n    unreaded, \r\n    isTyping, \r\n    lastMessage, \r\n    user = lastMessage.user, \r\n    onSelect \r\n  }) => {\r\n  const userData = useSelector(({user: {data}}) => data)\r\n  const [isMe, setIsMe] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if(userData && user){\r\n      setIsMe(userData._id === user._id)\r\n    }\r\n  }, [userData, user])\r\n\r\n  return(\r\n  <div onClick = {onSelect.bind(this, id)} className = {classNames(\"dialogs__item\", {\"dialogs__item--online\": partner.isOnline})}>\r\n    <div className='dialogs__item-avatar'>\r\n      <Avatar avatarSrc={partner.avatar} hash={partner._id} username={partner.fullname}/>\r\n    </div>\r\n    <div className=\"dialogs__item-info\">\r\n      <div className=\"dialogs__item-info-top\">\r\n        <b className=\"dialogs__username\">{partner.fullname}</b>\r\n        <span className=\"dialogs__date\">\r\n          {getMessageTime(lastMessage.createdAt)}\r\n        </span>\r\n      </div>\r\n      <div className=\"dialogs__item-info-bottom\">\r\n        <p className=\"dialogs__text\">\r\n          {isTyping ? 'печатает...' : `${ isMe ? 'Вы' : partner.fullname}: ${lastMessage.text}`}\r\n        </p>\r\n      </div>\r\n      {isMe ? <IconReaded className=\"dialogs__readed-icon\" isReaded = {lastMessage.isReaded} /> : ''}\r\n      {(!isMe && unreaded) ? <div className=\"dialogs__count\">{unreaded}</div> : ''}\r\n    </div>\r\n  </div>\r\n)}\r\n\r\nDialogItem.propTypes = {\r\n  id: propTypes.string, \r\n  partner: propTypes.object, \r\n  unreaded: propTypes.number, \r\n  isTyping: propTypes.bool, \r\n  lastMessage: propTypes.object, \r\n  user: propTypes.object, \r\n  onSelect: propTypes.func\r\n}\r\n\r\nexport default DialogItem","import React from 'react'\r\nimport propTypes from 'prop-types'\r\nimport  DialogItem  from '../DialogItem'\r\nimport orderBy from 'lodash/orderBy'\r\nimport { Input, Empty, Spin } from 'antd'\r\nimport './Dialogs.scss'\r\n\r\n\r\nconst DialogItems = ({dialogs, me, onSelectDialog}) => {\r\n  if(me){\r\n    return dialogs.length\r\n      ? orderBy(\r\n        dialogs,\r\n        ({lastMessage}) => lastMessage.createdAt,\r\n        [\"desc\"]\r\n      ).map(dialog => {\r\n        const partner = me._id === dialog.partner._id ? dialog.author : dialog.partner\r\n        return(\r\n          <DialogItem onSelect={onSelectDialog} partner={partner} isTyping={dialog.isTyping || false}  key={dialog._id} id={dialog._id} lastMessage={dialog.lastMessage} unreaded = {dialog.unreaded}/>\r\n      )})\r\n      : <Empty\r\n          image={Empty.PRESENTED_IMAGE_SIMPLE}\r\n          imageStyle={{height: 80}} \r\n          description=\"Диалоги не найдены\" \r\n        />\r\n  }\r\n  return <Spin size=\"large\"/>\r\n}\r\n\r\nconst Dialogs = ({ me, dialogs, onSearch, inputValue, onSelectDialog }) =>{\r\n  \r\n  return (\r\n  <div className=\"dialogs\">\r\n    <div className=\"dialogs__search\">\r\n      <Input.Search \r\n        onChange={e => onSearch(e.target.value.toLowerCase())} \r\n        placeholder=\"Поиск среди контактов\" \r\n        size=\"large\" \r\n        value={inputValue}\r\n      />\r\n    </div>\r\n    <DialogItems dialogs={dialogs} me={me} onSelectDialog = {onSelectDialog}/>\r\n  </div>\r\n)}\r\n\r\nDialogs.defaultProps = {\r\n  inputValue: '',\r\n  me: {},\r\n  dialogs: []\r\n\r\n}\r\n\r\nDialogs.propTypes = {\r\n  me: propTypes.object, \r\n  dialogs: propTypes.array, \r\n  onSearch: propTypes.func,\r\n  inputValue: propTypes.string, \r\n  onSelectDialog: propTypes.func\r\n}\r\n\r\nexport default Dialogs","import React, {useState, useEffect, useRef} from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { dialogsActions } from '../redux/actions'\r\nimport Dialogs from '../components/Dialogs'\r\n\r\nconst DialogsContainer = ({ \r\n    me, \r\n    dialogs, \r\n    socket,\r\n    currentDialogId, \r\n    updateLastMessage,  \r\n    updateLastMessageReaded, \r\n    setCurrentDialog, \r\n    fetchDialogs, \r\n    addDialog, \r\n    updateUnreadedCount, \r\n    setPartnerStatus\r\n  }) => {\r\n  const [inputValue, setValue] = useState()\r\n  const [filtered, setFiltered] = useState(dialogs)\r\n  const timeoutId = useRef(null)\r\n\r\n  const onChangeInput = value => {\r\n    setFiltered(dialogs.filter(dialog => {\r\n      const partner = me._id === dialog.partner._id ? 'author' : 'partner'\r\n      return dialog[partner].fullname.toLowerCase().indexOf(value) >= 0 \r\n    }))\r\n    setValue(value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if(!dialogs.length)\r\n      fetchDialogs()\r\n    else setFiltered(dialogs)\r\n  }, [dialogs])\r\n\r\n  useEffect(() => {\r\n    socket.on('SERVER:DIALOG_CREATED', onDialogCreated)\r\n    socket.on('SERVER:MESSAGES_READED', onMessageReadedHandler)\r\n    return () => {\r\n      socket.removeListener('SERVER:MESSAGE_READED', onMessageReadedHandler)\r\n      socket.removeListener('SERVER:DIALOG_CREATED', onDialogCreated)\r\n    }\r\n  }, [me, currentDialogId])\r\n\r\n  useEffect(() => {\r\n    socket.on('USER_CONNECTED', onUserConnected)\r\n    socket.on('USER_DISCONNECTED', onUserDisconnected)\r\n    socket.on('SERVER:MESSAGE_CREATED', onMessageCreatedHandler)\r\n    socket.on('MESSAGE_TYPING', onMessageTyping)\r\n    return () => {\r\n      socket.removeListener('USER_CONNECTED', onUserConnected)\r\n      socket.removeListener('USER_DISCONNECTED', onUserDisconnected) \r\n      socket.removeListener('SERVER:MESSAGE_CREATED', onMessageCreatedHandler)\r\n      socket.removeListener('MESSAGE_TYPING', onMessageTyping)\r\n    }\r\n  }, [me, dialogs, currentDialogId, filtered])\r\n\r\n  const onMessageCreatedHandler = msg => {\r\n    setPartnerTyping(false, msg.dialog._id)\r\n    clearTimeout(timeoutId.current)\r\n    if(currentDialogId !== msg.dialog._id && me._id !== msg.user._id){\r\n      for(let dialog of dialogs ){\r\n        if(dialog._id === msg.dialog._id){\r\n          updateUnreadedCount(msg.dialog._id, msg.dialog.unreaded++)\r\n        }\r\n      }\r\n    }\r\n    if(me && msg.dialog.author === me._id || msg.dialog.partner === me._id)\r\n      updateLastMessage(msg.dialog._id, msg) \r\n  }\r\n\r\n  const onMessageReadedHandler = ({dialog_id, partner_id}) => {\r\n    if(me && partner_id === me._id)\r\n      updateLastMessageReaded(dialog_id)\r\n  }\r\n\r\n  const onDialogCreated = dialog => {\r\n    if(me && me._id === dialog.partner._id){\r\n      addDialog(dialog)\r\n    }\r\n  }\r\n\r\n  const onUserConnected = userId => {\r\n    setPartnerStatus(userId, true)\r\n  }\r\n  const onUserDisconnected = userId => {\r\n    setPartnerStatus(userId, false)\r\n  }\r\n\r\n  const setPartnerTyping = (isTyping, dialogId) => {\r\n    console.log(filtered)\r\n    setFiltered(filtered.map((dialog => {\r\n      if(dialogId === dialog._id)\r\n        dialog.isTyping = isTyping\r\n      return dialog\r\n    })))\r\n  }\r\n\r\n  const onMessageTyping = ({user, dialogId}) => {\r\n    console.log(filtered)\r\n    if(me && me._id !== user._id){\r\n      clearTimeout(timeoutId.current)\r\n      setPartnerTyping(true, dialogId)\r\n      timeoutId.current = setTimeout(() => {\r\n        setPartnerTyping(false, dialogId)\r\n      }, 2000)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialogs \r\n      me={me} \r\n      dialogs={filtered} \r\n      onSearch={onChangeInput} \r\n      inputValue={inputValue} \r\n      onSelectDialog={setCurrentDialog}\r\n    />\r\n  );\r\n};\r\n\r\nexport default connect(({user, dialogs: {dialogs}, currentDialog: {currentDialog} }) => ({dialogs: dialogs, socket: user.socket, currentDialogId: currentDialog, me: user.data}), dialogsActions)(DialogsContainer);","import React from 'react';\r\nimport './Sidebar.scss'\r\nimport { TeamOutlined, FormOutlined, LogoutOutlined } from '@ant-design/icons'\r\nimport { Modal,  Button, Select, Spin, Tooltip, Input } from 'antd'\r\nimport  DialogsContainer  from '../../containers/DialogsContainer'\r\n\r\nconst Sidebar = (\r\n  {\r\n    modalHandleOk, \r\n    showModal, \r\n    modalHandleCancel, \r\n    modalState, \r\n    usersHandleChange, \r\n    usersHandleSearch, \r\n    usersSearchState, \r\n    message,\r\n    messageHandleChange,\r\n    logout\r\n  }) => {\r\n  const {visible, confirmLoading} = modalState\r\n  const {value, fetching, data} = usersSearchState\r\n  const options = data.map(d => <Select.Option key={d._id}>{d.fullname}</Select.Option>);\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar__header\">\r\n        <div>\r\n          <TeamOutlined  style={{ fontSize: '18px'}}/>\r\n          <span>Список диалогов</span>\r\n        </div>\r\n        <div>\r\n          <Tooltip title=\"Создать диалог\">\r\n          <Button \r\n            onClick={showModal} \r\n            className=\"ant-btn--no-border\" \r\n            form=\"circle\" \r\n            icon={<FormOutlined \r\n            style={{ fontSize: '18px'}}/>}\r\n          />\r\n          </Tooltip>\r\n          <Modal\r\n            title=\"Создание диалога\"\r\n            visible={visible}\r\n            onCancel={modalHandleCancel}\r\n            footer={[\r\n              <Button key=\"back\" onClick={modalHandleCancel}>\r\n                Отмена\r\n              </Button>,\r\n              <Button \r\n                disabled={!value || !message} \r\n                key=\"submit\" \r\n                type=\"primary\" \r\n                loading={confirmLoading} \r\n                onClick={modalHandleOk}\r\n              >\r\n                Создать\r\n              </Button>,\r\n            ]}\r\n          >\r\n            <Select\r\n              showSearch\r\n              value={value}\r\n              placeholder=\"Введите username или e-mail пользователя\"\r\n              style={{width: '100%'}}\r\n              defaultActiveFirstOption={false}\r\n              notFoundContent={fetching ? <Spin size=\"small\" /> : <span>{'Пользователи не найдены'}</span>}\r\n              showArrow={false}\r\n              filterOption={false}\r\n              onSearch={usersHandleSearch}\r\n              onChange={usersHandleChange}\r\n            >\r\n              {options}\r\n            </Select>\r\n            <div style={{marginTop: '15px'}}>\r\n              <Input.TextArea \r\n                value={message}\r\n                placeholder=\"Введите сообщение\" \r\n                autoSize={{ minRows: 3, maxRows: 5 }} \r\n                onChange={messageHandleChange}\r\n              />\r\n            </div>\r\n          </Modal>\r\n          <Tooltip title=\"Выйти из аккаунта\">\r\n            <Button \r\n              onClick={logout} \r\n              className=\"ant-btn--no-border\" \r\n              form=\"circle\" \r\n              icon={<LogoutOutlined style={{ fontSize: '18px'}}/>}\r\n            />\r\n          </Tooltip>\r\n        </div>\r\n      </div>\r\n      <div className = \"sidebar__dialogs\">\r\n        <DialogsContainer/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;","import React, {useState} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\nimport Sidebar from '../components/Sidebar'\r\nimport { dialogsActions, userActions, currentDialogActions } from '../redux/actions'\r\nimport { userAPI } from '../utils/api'\r\n\r\n\r\nconst SidebarContainer = ({createDialog, clearUserData, clearCurrentDialog, clearDialogs, history}) => {\r\n\r\n  const [usersSearchState, setUsersSearchState] = useState({\r\n    data: [],\r\n    fetching: false,\r\n    value: undefined,\r\n  }) \r\n  const [modalState, setModalState] = useState({\r\n    visible: false, \r\n    confirmLoading: false\r\n  })\r\n\r\n  const [message, setMessage] = useState('')\r\n\r\n  const messageHandleChange = ({target: { value }}) => {\r\n    setMessage(value)\r\n  }\r\n\r\n  const usersHandleSearch = value => {\r\n    if (value) {\r\n      setUsersSearchState({...usersSearchState, fetching: true})\r\n      userAPI.find(value).then((response) => {\r\n        if(response.status === 200){\r\n          setUsersSearchState({...usersSearchState, fetching: false, data: response.data})\r\n        }\r\n      }).catch(err => {\r\n        setUsersSearchState({...usersSearchState, fetching: false})\r\n      });\r\n    } else {\r\n      \r\n      setUsersSearchState({...usersSearchState, data: []})\r\n    }\r\n  };\r\n\r\n  const usersHandleChange = value => {\r\n    setUsersSearchState({...usersSearchState, value})\r\n  };\r\n\r\n  const showModal = () => {\r\n    setModalState({...modalState, visible: true});\r\n  };\r\n\r\n  const modalHandleOk = () => {\r\n    if(usersSearchState.value){\r\n      setModalState({...modalState, confirmLoading: true})\r\n      createDialog(usersSearchState.value, message).then(() => {\r\n        setModalState({visible: false, confirmLoading: false})\r\n        setUsersSearchState({\r\n          data: [],\r\n          fetching: false,\r\n          value: undefined,\r\n        })\r\n        setMessage('')\r\n      })  \r\n    }\r\n  };\r\n\r\n  const modalHandleCancel = () => {\r\n    setModalState({...modalState, visible: false});\r\n  };\r\n\r\n  const logout = () => {\r\n    clearUserData()\r\n    clearCurrentDialog()\r\n    clearDialogs()\r\n    history.push('/login')\r\n  }\r\n\r\n  return (\r\n    <Sidebar \r\n      showModal={showModal} \r\n      modalHandleCancel={modalHandleCancel} \r\n      modalHandleOk={modalHandleOk} \r\n      modalState={modalState} \r\n      usersHandleSearch={usersHandleSearch}\r\n      usersHandleChange={usersHandleChange} \r\n      usersSearchState={usersSearchState}\r\n      messageHandleChange={messageHandleChange}\r\n      message={message}\r\n      logout={logout}\r\n    />\r\n  );\r\n};\r\n\r\nexport default connect((state) =>  state, \r\n  {\r\n    ...dialogsActions, \r\n    ...userActions, \r\n    ...currentDialogActions\r\n  }\r\n)(withRouter(SidebarContainer));","import React from 'react'\r\nimport './Home.scss'\r\nimport  CurrentDialogContainer  from '../../containers/CurrentDialogContainer'\r\nimport  SidebarContainer  from '../../containers/SidebarContainer'\r\n\r\nconst Home = () => \r\n  (\r\n    <section className = \"home\">\r\n      <div className=\"chat\">\r\n        <div className=\"chat__sidebar\">\r\n          <SidebarContainer/>\r\n        </div>\r\n        <div className=\"chat__dialog\">\r\n          <div className = \"chat__dialog-messages\">\r\n            <CurrentDialogContainer/>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n\r\nexport default Home","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport Auth from './pages/Auth'\nimport Home from './pages/Home'\nimport { userActions } from './redux/actions'\n\nfunction App({me, isAuth, token, fetchUserData}) {\n\n  useEffect(() => {\n    if(token && !me)\n      fetchUserData(token)\n  }, [me])\n  \n  return (\n    <div className=\"wrapper\">\n      <Router>\n        <Switch>\n          <Route exact path='/' render={() => isAuth ? <Redirect to=\"/im\"/>  : <Redirect to=\"/login\"/>}/> \n          <Route exact path={['/login', '/register']} render={() => isAuth ?  <Redirect to=\"/im\"/> : <Auth/>}/>\n          <Route exact path='/im' render={() => isAuth ? <Home/> : <Redirect to=\"/login\"/>}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default connect(({ user: {isAuth, token, data} }) => ({isAuth, token, me: data}), userActions)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n  dialogs: [], \r\n}\r\n\r\nconst handlers = {\r\n  DIALOGS_SET_ITEMS: (state, payload) => ({...state, dialogs: payload}),\r\n  CLEAR_DIALOGS: () => (initialState),\r\n  ADD_DIALOG: (state, payload) => ({...state, dialogs: [...state.dialogs, payload]}),\r\n  UPDATE_LAST_MESSAGE: (state, {dialogId, message}) => \r\n    ({...state, \r\n      dialogs: state.dialogs.map(dialog => {\r\n        if(dialogId === dialog._id) {\r\n          dialog.lastMessage = message\r\n        }\r\n        return dialog\r\n      })\r\n    }),\r\n  UPDATE_LAST_MESSAGE_READED: (state, payload) => \r\n    ({...state, dialogs: state.dialogs.map(dialog => {\r\n        if(payload === dialog._id) {\r\n          dialog.lastMessage.isReaded = true\r\n        }\r\n        return dialog\r\n      })\r\n    }),\r\n  UPDATE_UNREADED_COUNT: (state, {dialogId, unreadedCount}) => \r\n  ({...state, dialogs: state.dialogs.map(dialog => {\r\n      if(dialogId === dialog._id) {\r\n        dialog.unreaded = unreadedCount\r\n      }\r\n      return dialog\r\n    })\r\n  }),\r\n  SET_PARTNER_STATUS: (state, {partnerId, isOnline}) => \r\n  ({...state, dialogs: state.dialogs.map(dialog => {\r\n      if(partnerId === dialog.author._id){\r\n        dialog.author.isOnline = isOnline\r\n        dialog.author.last_seen = new Date().toISOString()\r\n      }\r\n      if(partnerId === dialog.partner._id){\r\n        dialog.partner.isOnline = isOnline\r\n        dialog.partner.last_seen = new Date().toISOString()\r\n      }\r\n      return dialog\r\n    })\r\n  }),\r\n  DEFAULT: state => state\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  const handle = handlers[type] || handlers.DEFAULT\r\n  return handle(state, payload)\r\n}","const initialState = {\r\n  items: null,\r\n  loading: false,\r\n  currentDialog: null\r\n}\r\n\r\nconst handlers = {\r\n  SET_LOADING: (state, isLoading) => ({...state, loading: isLoading }),\r\n  SET_CURRENT_DIALOG: (state, payload) => ({...state, loading: false, items: payload}),\r\n  CLEAR_CURRENT_DIALOG: () => (initialState),\r\n  ADD_MESSAGE: (state, payload) => ({...state, items: [...state.items, payload]}),\r\n  SET_CURRENT_DIALOG_ID: (state, payload) => ({...state, currentDialog: payload}),\r\n  UPDATE_IS_READED: (state, {dialogId, myId}) => ({...state, items: state.items.map(message => {\r\n    if(message.dialog._id === dialogId && message.user._id === myId) {\r\n      message.isReaded = true\r\n    }\r\n    return message\r\n  })}),\r\n  DEFAULT: state => state\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  const handle = handlers[type] || handlers.DEFAULT\r\n  return handle(state, payload)\r\n}","import io from 'socket.io-client'\r\nimport config from '../../configs'\r\n\r\nconst initialState = {\r\n  data: null,\r\n  token: window.localStorage.token || '',\r\n  socket: io.connect(`${config.development.API_URL}:${config.development.API_PORT}`, {\r\n    query: {\r\n      token: window.localStorage.token || ''\r\n    }\r\n  }),\r\n  isAuth: !!window.localStorage.token\r\n}\r\n\r\nconst handlers = {\r\n  USER_SET_DATA: (state, payload) => ({...state, data: payload}),\r\n  CLEAR_USER_DATA: () => ({data: null, token: '', socket: null, isAuth: false}),\r\n  SOCKET_CREATE_CONNECTION: (state, payload) => ({...state, socket: payload}),\r\n  SET_TOKEN: (state, payload) => ({...state, token: payload}),\r\n  SET_IS_AUTH: (state, payload) => ({...state, isAuth: payload}),\r\n  DEFAULT: state => state\r\n}\r\n\r\nexport default (state = initialState, { type, payload }) => {\r\n  const handle = handlers[type] || handlers.DEFAULT\r\n  return handle(state, payload)\r\n}","import { combineReducers } from 'redux'\r\nimport dialogs from './dialogs'\r\nimport currentDialog from './currentDialog'\r\nimport user from './user'\r\n\r\nexport default combineReducers({ dialogs, currentDialog, user })","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport rootReducer from './reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(...middleware)))\r\n\r\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/index.scss'\nimport 'emoji-mart/css/emoji-mart.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}